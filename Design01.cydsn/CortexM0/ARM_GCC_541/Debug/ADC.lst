ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 0E20     		movs	r0, #14
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 2349     		ldr	r1, .L6
  43 000c 0E20     		movs	r0, #14
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 214B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 214B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 2049     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 2049     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 214A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 204A     		ldr	r2, .L6+24
  68 0030 204B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 204A     		ldr	r2, .L6+32
  72 0036 214B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 204A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 204A     		ldr	r2, .L6+44
  80 0042 2149     		ldr	r1, .L6+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 2149     		ldr	r1, .L6+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 4
  86 004a 2149     		ldr	r1, .L6+56
  87 004c 0A68     		ldr	r2, [r1]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0243     		orrs	r2, r0
  91 0054 0A60     		str	r2, [r1]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 6


 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  92              		.loc 1 197 0 discriminator 4
  93 0056 1F4A     		ldr	r2, .L6+60
  94 0058 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  95              		.loc 1 198 0 discriminator 4
  96 005a 1F4A     		ldr	r2, .L6+64
  97 005c 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  98              		.loc 1 199 0 discriminator 4
  99 005e 0133     		adds	r3, r3, #1
 100 0060 1E4A     		ldr	r2, .L6+68
 101 0062 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 102              		.loc 1 202 0 discriminator 4
 103 0064 0221     		movs	r1, #2
 104 0066 1E4A     		ldr	r2, .L6+72
 105 0068 1160     		str	r1, [r2]
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 106              		.loc 1 206 0 discriminator 4
 107 006a 1E49     		ldr	r1, .L6+76
 108 006c 0868     		ldr	r0, [r1]
 109              	.LVL2:
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 110              		.loc 1 207 0 discriminator 4
 111 006e 1E4A     		ldr	r2, .L6+80
 112 0070 0240     		ands	r2, r0
 113              	.LVL3:
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 114              		.loc 1 213 0 discriminator 4
 115 0072 1343     		orrs	r3, r2
 116              	.LVL4:
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 7


 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 117              		.loc 1 226 0 discriminator 4
 118 0074 0B60     		str	r3, [r1]
 119              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 120              		.loc 1 232 0 discriminator 4
 121 0076 0023     		movs	r3, #0
 122              	.LVL6:
 123 0078 0BE0     		b	.L3
 124              	.LVL7:
 125              	.L4:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 126              		.loc 1 253 0
 127 007a 9A00     		lsls	r2, r3, #2
 128 007c 1B49     		ldr	r1, .L6+84
 129 007e 5018     		adds	r0, r2, r1
 130 0080 0021     		movs	r1, #0
 131 0082 0160     		str	r1, [r0]
 132              	.LVL8:
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 8


 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 133              		.loc 1 298 0
 134 0084 5C00     		lsls	r4, r3, #1
 135 0086 1A48     		ldr	r0, .L6+88
 136 0088 2152     		strh	r1, [r4, r0]
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 137              		.loc 1 311 0
 138 008a 1A48     		ldr	r0, .L6+92
 139 008c 1A49     		ldr	r1, .L6+96
 140 008e 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 141              		.loc 1 232 0
 142 0090 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 9


 143              	.LVL9:
 144              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 145              		.loc 1 232 0 is_stmt 0 discriminator 1
 146 0092 002B     		cmp	r3, #0
 147 0094 F1D0     		beq	.L4
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 148              		.loc 1 314 0 is_stmt 1
 149              		@ sp needed
 150 0096 10BD     		pop	{r4, pc}
 151              	.L7:
 152              		.align	2
 153              	.L6:
 154 0098 00000000 		.word	ADC_ISR
 155 009c 20001A40 		.word	1075445792
 156 00a0 80031A40 		.word	1075446656
 157 00a4 70021051 		.word	1360003696
 158 00a8 70020051 		.word	1358955120
 159 00ac 00001A40 		.word	1075445760
 160 00b0 84000A80 		.word	-2146828156
 161 00b4 04001A40 		.word	1075445764
 162 00b8 0000FF07 		.word	134152192
 163 00bc 18001A40 		.word	1075445784
 164 00c0 1C001A40 		.word	1075445788
 165 00c4 04000400 		.word	262148
 166 00c8 10001A40 		.word	1075445776
 167 00cc 14001A40 		.word	1075445780
 168 00d0 00031A40 		.word	1075446528
 169 00d4 28021A40 		.word	1075446312
 170 00d8 38021A40 		.word	1075446328
 171 00dc 18021A40 		.word	1075446296
 172 00e0 000F1A40 		.word	1075449600
 173 00e4 30001A40 		.word	1075445808
 174 00e8 FFFFFFDF 		.word	-536870913
 175 00ec 80001A40 		.word	1075445888
 176 00f0 00000000 		.word	ADC_offset
 177 00f4 3E180000 		.word	6206
 178 00f8 00000000 		.word	ADC_countsPer10Volt
 179              		.cfi_endproc
 180              	.LFE1:
 181              		.size	ADC_Init, .-ADC_Init
 182              		.section	.text.ADC_Enable,"ax",%progbits
 183              		.align	2
 184              		.global	ADC_Enable
 185              		.code	16
 186              		.thumb_func
 187              		.type	ADC_Enable, %function
 188              	ADC_Enable:
 189              	.LFB2:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 10


 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 190              		.loc 1 331 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 10B5     		push	{r4, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 198              		.loc 1 332 0
 199 0002 074B     		ldr	r3, .L10
 200 0004 1B68     		ldr	r3, [r3]
 201 0006 002B     		cmp	r3, #0
 202 0008 08DB     		blt	.L8
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 203              		.loc 1 342 0
 204 000a 054A     		ldr	r2, .L10
 205 000c 1368     		ldr	r3, [r2]
 206 000e 8021     		movs	r1, #128
 207 0010 0906     		lsls	r1, r1, #24
 208 0012 0B43     		orrs	r3, r1
 209 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 210              		.loc 1 345 0
 211 0016 0A20     		movs	r0, #10
 212 0018 FFF7FEFF 		bl	CyDelayUs
 213              	.LVL10:
 214              	.L8:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 215              		.loc 1 347 0
 216              		@ sp needed
 217 001c 10BD     		pop	{r4, pc}
 218              	.L11:
 219 001e C046     		.align	2
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 11


 220              	.L10:
 221 0020 00001A40 		.word	1075445760
 222              		.cfi_endproc
 223              	.LFE2:
 224              		.size	ADC_Enable, .-ADC_Enable
 225              		.section	.text.ADC_Start,"ax",%progbits
 226              		.align	2
 227              		.global	ADC_Start
 228              		.code	16
 229              		.thumb_func
 230              		.type	ADC_Start, %function
 231              	ADC_Start:
 232              	.LFB0:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 233              		.loc 1 64 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 10B5     		push	{r4, lr}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 241              		.loc 1 66 0
 242 0002 064B     		ldr	r3, .L14
 243 0004 1B78     		ldrb	r3, [r3]
 244 0006 002B     		cmp	r3, #0
 245 0008 04D1     		bne	.L13
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 246              		.loc 1 68 0
 247 000a FFF7FEFF 		bl	ADC_Init
 248              	.LVL11:
  69:Generated_Source\PSoC4/ADC.c ****     }
 249              		.loc 1 69 0
 250 000e 0122     		movs	r2, #1
 251 0010 024B     		ldr	r3, .L14
 252 0012 1A70     		strb	r2, [r3]
 253              	.L13:
  71:Generated_Source\PSoC4/ADC.c **** }
 254              		.loc 1 71 0
 255 0014 FFF7FEFF 		bl	ADC_Enable
 256              	.LVL12:
  72:Generated_Source\PSoC4/ADC.c **** 
 257              		.loc 1 72 0
 258              		@ sp needed
 259 0018 10BD     		pop	{r4, pc}
 260              	.L15:
 261 001a C046     		.align	2
 262              	.L14:
 263 001c 00000000 		.word	.LANCHOR0
 264              		.cfi_endproc
 265              	.LFE0:
 266              		.size	ADC_Start, .-ADC_Start
 267              		.section	.text.ADC_Stop,"ax",%progbits
 268              		.align	2
 269              		.global	ADC_Stop
 270              		.code	16
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 12


 271              		.thumb_func
 272              		.type	ADC_Stop, %function
 273              	ADC_Stop:
 274              	.LFB3:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 275              		.loc 1 366 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 280              		.loc 1 367 0
 281 0000 024A     		ldr	r2, .L17
 282 0002 1368     		ldr	r3, [r2]
 283 0004 5B00     		lsls	r3, r3, #1
 284 0006 5B08     		lsrs	r3, r3, #1
 285 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 286              		.loc 1 368 0
 287              		@ sp needed
 288 000a 7047     		bx	lr
 289              	.L18:
 290              		.align	2
 291              	.L17:
 292 000c 00001A40 		.word	1075445760
 293              		.cfi_endproc
 294              	.LFE3:
 295              		.size	ADC_Stop, .-ADC_Stop
 296              		.section	.text.ADC_StartConvert,"ax",%progbits
 297              		.align	2
 298              		.global	ADC_StartConvert
 299              		.code	16
 300              		.thumb_func
 301              		.type	ADC_StartConvert, %function
 302              	ADC_StartConvert:
 303              	.LFB4:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 13


 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 304              		.loc 1 392 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 309              		.loc 1 396 0
 310 0000 0122     		movs	r2, #1
 311 0002 014B     		ldr	r3, .L20
 312 0004 1A60     		str	r2, [r3]
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 313              		.loc 1 399 0
 314              		@ sp needed
 315 0006 7047     		bx	lr
 316              	.L21:
 317              		.align	2
 318              	.L20:
 319 0008 24001A40 		.word	1075445796
 320              		.cfi_endproc
 321              	.LFE4:
 322              		.size	ADC_StartConvert, .-ADC_StartConvert
 323              		.section	.text.ADC_StopConvert,"ax",%progbits
 324              		.align	2
 325              		.global	ADC_StopConvert
 326              		.code	16
 327              		.thumb_func
 328              		.type	ADC_StopConvert, %function
 329              	ADC_StopConvert:
 330              	.LFB5:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 14


 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 331              		.loc 1 417 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 336              		.loc 1 421 0
 337              		@ sp needed
 338 0000 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE5:
 341              		.size	ADC_StopConvert, .-ADC_StopConvert
 342 0002 C046     		.section	.text.ADC_IsEndConversion,"ax",%progbits
 343              		.align	2
 344              		.global	ADC_IsEndConversion
 345              		.code	16
 346              		.thumb_func
 347              		.type	ADC_IsEndConversion, %function
 348              	ADC_IsEndConversion:
 349              	.LFB6:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 15


 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 350              		.loc 1 451 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LVL13:
 356 0000 0200     		movs	r2, r0
 357              	.LVL14:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 358              		.loc 1 454 0
 359 0002 8307     		lsls	r3, r0, #30
 360 0004 0CD0     		beq	.L27
 361              	.LVL15:
 362              	.L26:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 363              		.loc 1 458 0 discriminator 2
 364 0006 074B     		ldr	r3, .L28
 365 0008 1B68     		ldr	r3, [r3]
 366 000a 0120     		movs	r0, #1
 367 000c 1840     		ands	r0, r3
 368              	.LVL16:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 369              		.loc 1 459 0 discriminator 2
 370 000e 01D1     		bne	.L25
 371              		.loc 1 459 0 is_stmt 0 discriminator 1
 372 0010 9307     		lsls	r3, r2, #30
 373 0012 F8D4     		bmi	.L26
 374              	.L25:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 375              		.loc 1 461 0 is_stmt 1
 376 0014 0028     		cmp	r0, #0
 377 0016 04D0     		beq	.L24
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 378              		.loc 1 464 0
 379 0018 0122     		movs	r2, #1
 380              	.LVL17:
 381 001a 024B     		ldr	r3, .L28
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 16


 382 001c 1A60     		str	r2, [r3]
 383 001e 00E0     		b	.L24
 384              	.LVL18:
 385              	.L27:
 452:Generated_Source\PSoC4/ADC.c **** 
 386              		.loc 1 452 0
 387 0020 0020     		movs	r0, #0
 388              	.LVL19:
 389              	.L24:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 390              		.loc 1 486 0
 391              		@ sp needed
 392 0022 7047     		bx	lr
 393              	.L29:
 394              		.align	2
 395              	.L28:
 396 0024 10021A40 		.word	1075446288
 397              		.cfi_endproc
 398              	.LFE6:
 399              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 400              		.section	.text.ADC_GetResult16,"ax",%progbits
 401              		.align	2
 402              		.global	ADC_GetResult16
 403              		.code	16
 404              		.thumb_func
 405              		.type	ADC_GetResult16, %function
 406              	ADC_GetResult16:
 407              	.LFB7:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 17


 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 408              		.loc 1 505 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL20:
 413 0000 10B5     		push	{r4, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 4, -8
 416              		.cfi_offset 14, -4
 417 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 418              		.loc 1 509 0
 419 0004 02D0     		beq	.L31
 420              		.loc 1 509 0 is_stmt 0 discriminator 1
 421 0006 0020     		movs	r0, #0
 422              	.LVL21:
 423 0008 FFF7FEFF 		bl	CyHalt
 424              	.LVL22:
 425              	.L31:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 426              		.loc 1 511 0 is_stmt 1
 427 000c 002C     		cmp	r4, #0
 428 000e 07D1     		bne	.L33
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 429              		.loc 1 513 0
 430 0010 A400     		lsls	r4, r4, #2
 431              	.LVL23:
 432 0012 054B     		ldr	r3, .L34
 433 0014 9C46     		mov	ip, r3
 434 0016 6444     		add	r4, r4, ip
 435 0018 2068     		ldr	r0, [r4]
 436 001a 0004     		lsls	r0, r0, #16
 437 001c 000C     		lsrs	r0, r0, #16
 438              	.LVL24:
 439 001e 00E0     		b	.L32
 440              	.LVL25:
 441              	.L33:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 18


 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 442              		.loc 1 521 0
 443 0020 0020     		movs	r0, #0
 444              	.LVL26:
 445              	.L32:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 446              		.loc 1 525 0
 447 0022 00B2     		sxth	r0, r0
 448              	.LVL27:
 526:Generated_Source\PSoC4/ADC.c **** }
 449              		.loc 1 526 0
 450              		@ sp needed
 451 0024 10BD     		pop	{r4, pc}
 452              	.L35:
 453 0026 C046     		.align	2
 454              	.L34:
 455 0028 80011A40 		.word	1075446144
 456              		.cfi_endproc
 457              	.LFE7:
 458              		.size	ADC_GetResult16, .-ADC_GetResult16
 459              		.section	.text.ADC_SetChanMask,"ax",%progbits
 460              		.align	2
 461              		.global	ADC_SetChanMask
 462              		.code	16
 463              		.thumb_func
 464              		.type	ADC_SetChanMask, %function
 465              	ADC_SetChanMask:
 466              	.LFB8:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 19


 550:Generated_Source\PSoC4/ADC.c **** {
 467              		.loc 1 550 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472              	.LVL28:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 473              		.loc 1 551 0
 474 0000 0123     		movs	r3, #1
 475 0002 1840     		ands	r0, r3
 476              	.LVL29:
 477 0004 014B     		ldr	r3, .L37
 478 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 479              		.loc 1 552 0
 480              		@ sp needed
 481 0008 7047     		bx	lr
 482              	.L38:
 483 000a C046     		.align	2
 484              	.L37:
 485 000c 20001A40 		.word	1075445792
 486              		.cfi_endproc
 487              	.LFE8:
 488              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 489              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 490              		.align	2
 491              		.global	ADC_SetLowLimit
 492              		.code	16
 493              		.thumb_func
 494              		.type	ADC_SetLowLimit, %function
 495              	ADC_SetLowLimit:
 496              	.LFB9:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 20


 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 497              		.loc 1 594 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 502              	.LVL30:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 503              		.loc 1 595 0
 504 0000 054A     		ldr	r2, .L40
 505 0002 1368     		ldr	r3, [r2]
 506 0004 1B0C     		lsrs	r3, r3, #16
 507 0006 1B04     		lsls	r3, r3, #16
 508 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 509              		.loc 1 596 0
 510 000a 1368     		ldr	r3, [r2]
 511 000c 0004     		lsls	r0, r0, #16
 512              	.LVL31:
 513 000e 000C     		lsrs	r0, r0, #16
 514 0010 1843     		orrs	r0, r3
 515 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 516              		.loc 1 597 0
 517              		@ sp needed
 518 0014 7047     		bx	lr
 519              	.L41:
 520 0016 C046     		.align	2
 521              	.L40:
 522 0018 18001A40 		.word	1075445784
 523              		.cfi_endproc
 524              	.LFE9:
 525              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 526              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 527              		.align	2
 528              		.global	ADC_SetHighLimit
 529              		.code	16
 530              		.thumb_func
 531              		.type	ADC_SetHighLimit, %function
 532              	ADC_SetHighLimit:
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 21


 533              	.LFB10:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 534              		.loc 1 615 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539              	.LVL32:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 540              		.loc 1 616 0
 541 0000 044A     		ldr	r2, .L43
 542 0002 1368     		ldr	r3, [r2]
 543 0004 1B04     		lsls	r3, r3, #16
 544 0006 1B0C     		lsrs	r3, r3, #16
 545 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 546              		.loc 1 617 0
 547 000a 1368     		ldr	r3, [r2]
 548 000c 0004     		lsls	r0, r0, #16
 549              	.LVL33:
 550 000e 1843     		orrs	r0, r3
 551 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 552              		.loc 1 618 0
 553              		@ sp needed
 554 0012 7047     		bx	lr
 555              	.L44:
 556              		.align	2
 557              	.L43:
 558 0014 18001A40 		.word	1075445784
 559              		.cfi_endproc
 560              	.LFE10:
 561              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 562              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 563              		.align	2
 564              		.global	ADC_SetLimitMask
 565              		.code	16
 566              		.thumb_func
 567              		.type	ADC_SetLimitMask, %function
 568              	ADC_SetLimitMask:
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 22


 569              	.LFB11:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 570              		.loc 1 639 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575              	.LVL34:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 576              		.loc 1 640 0
 577 0000 0123     		movs	r3, #1
 578 0002 1840     		ands	r0, r3
 579              	.LVL35:
 580 0004 014B     		ldr	r3, .L46
 581 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 582              		.loc 1 641 0
 583              		@ sp needed
 584 0008 7047     		bx	lr
 585              	.L47:
 586 000a C046     		.align	2
 587              	.L46:
 588 000c 38021A40 		.word	1075446328
 589              		.cfi_endproc
 590              	.LFE11:
 591              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 592              		.section	.text.ADC_SetSatMask,"ax",%progbits
 593              		.align	2
 594              		.global	ADC_SetSatMask
 595              		.code	16
 596              		.thumb_func
 597              		.type	ADC_SetSatMask, %function
 598              	ADC_SetSatMask:
 599              	.LFB12:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 23


 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 600              		.loc 1 662 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605              	.LVL36:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 606              		.loc 1 663 0
 607 0000 0123     		movs	r3, #1
 608 0002 1840     		ands	r0, r3
 609              	.LVL37:
 610 0004 014B     		ldr	r3, .L49
 611 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 612              		.loc 1 664 0
 613              		@ sp needed
 614 0008 7047     		bx	lr
 615              	.L50:
 616 000a C046     		.align	2
 617              	.L49:
 618 000c 28021A40 		.word	1075446312
 619              		.cfi_endproc
 620              	.LFE12:
 621              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 622              		.section	.text.ADC_SetOffset,"ax",%progbits
 623              		.align	2
 624              		.global	ADC_SetOffset
 625              		.code	16
 626              		.thumb_func
 627              		.type	ADC_SetOffset, %function
 628              	ADC_SetOffset:
 629              	.LFB13:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 24


 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 630              		.loc 1 690 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              	.LVL38:
 635 0000 70B5     		push	{r4, r5, r6, lr}
 636              		.cfi_def_cfa_offset 16
 637              		.cfi_offset 4, -16
 638              		.cfi_offset 5, -12
 639              		.cfi_offset 6, -8
 640              		.cfi_offset 14, -4
 641 0002 0400     		movs	r4, r0
 642 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 643              		.loc 1 692 0
 644 0006 0028     		cmp	r0, #0
 645 0008 02D0     		beq	.L52
 646              		.loc 1 692 0 is_stmt 0 discriminator 1
 647 000a 0020     		movs	r0, #0
 648              	.LVL39:
 649 000c FFF7FEFF 		bl	CyHalt
 650              	.LVL40:
 651              	.L52:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 652              		.loc 1 694 0 is_stmt 1
 653 0010 6400     		lsls	r4, r4, #1
 654              	.LVL41:
 655 0012 014B     		ldr	r3, .L53
 656 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 657              		.loc 1 695 0
 658              		@ sp needed
 659 0016 70BD     		pop	{r4, r5, r6, pc}
 660              	.L54:
 661              		.align	2
 662              	.L53:
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 25


 663 0018 00000000 		.word	ADC_offset
 664              		.cfi_endproc
 665              	.LFE13:
 666              		.size	ADC_SetOffset, .-ADC_SetOffset
 667              		.section	.text.ADC_SetGain,"ax",%progbits
 668              		.align	2
 669              		.global	ADC_SetGain
 670              		.code	16
 671              		.thumb_func
 672              		.type	ADC_SetGain, %function
 673              	ADC_SetGain:
 674              	.LFB14:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 675              		.loc 1 724 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              	.LVL42:
 680 0000 70B5     		push	{r4, r5, r6, lr}
 681              		.cfi_def_cfa_offset 16
 682              		.cfi_offset 4, -16
 683              		.cfi_offset 5, -12
 684              		.cfi_offset 6, -8
 685              		.cfi_offset 14, -4
 686 0002 0400     		movs	r4, r0
 687 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 688              		.loc 1 726 0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 26


 689 0006 0028     		cmp	r0, #0
 690 0008 02D0     		beq	.L56
 691              		.loc 1 726 0 is_stmt 0 discriminator 1
 692 000a 0020     		movs	r0, #0
 693              	.LVL43:
 694 000c FFF7FEFF 		bl	CyHalt
 695              	.LVL44:
 696              	.L56:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 697              		.loc 1 728 0 is_stmt 1
 698 0010 A400     		lsls	r4, r4, #2
 699              	.LVL45:
 700 0012 014B     		ldr	r3, .L57
 701 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 702              		.loc 1 729 0
 703              		@ sp needed
 704              	.LVL46:
 705 0016 70BD     		pop	{r4, r5, r6, pc}
 706              	.L58:
 707              		.align	2
 708              	.L57:
 709 0018 00000000 		.word	ADC_countsPer10Volt
 710              		.cfi_endproc
 711              	.LFE14:
 712              		.size	ADC_SetGain, .-ADC_SetGain
 713              		.global	__aeabi_idiv
 714              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 715              		.align	2
 716              		.global	ADC_CountsTo_mVolts
 717              		.code	16
 718              		.thumb_func
 719              		.type	ADC_CountsTo_mVolts, %function
 720              	ADC_CountsTo_mVolts:
 721              	.LFB15:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 27


 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 722              		.loc 1 757 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              	.LVL47:
 727 0000 70B5     		push	{r4, r5, r6, lr}
 728              		.cfi_def_cfa_offset 16
 729              		.cfi_offset 4, -16
 730              		.cfi_offset 5, -12
 731              		.cfi_offset 6, -8
 732              		.cfi_offset 14, -4
 733 0002 0400     		movs	r4, r0
 734 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 735              		.loc 1 761 0
 736 0006 0028     		cmp	r0, #0
 737 0008 02D0     		beq	.L60
 738              		.loc 1 761 0 is_stmt 0 discriminator 1
 739 000a 0020     		movs	r0, #0
 740              	.LVL48:
 741 000c FFF7FEFF 		bl	CyHalt
 742              	.LVL49:
 743              	.L60:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 744              		.loc 1 772 0 is_stmt 1
 745 0010 6300     		lsls	r3, r4, #1
 746 0012 0F4A     		ldr	r2, .L63
 747 0014 995A     		ldrh	r1, [r3, r2]
 748 0016 09B2     		sxth	r1, r1
 749 0018 691A     		subs	r1, r5, r1
 750 001a 09B2     		sxth	r1, r1
 751              	.LVL50:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 752              		.loc 1 774 0
 753 001c 0D48     		ldr	r0, .L63+4
 754 001e 4843     		muls	r0, r1
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 28


 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 755              		.loc 1 775 0
 756 0020 0029     		cmp	r1, #0
 757 0022 06DD     		ble	.L61
 758              		.loc 1 775 0 is_stmt 0 discriminator 1
 759 0024 A300     		lsls	r3, r4, #2
 760 0026 0C4A     		ldr	r2, .L63+8
 761 0028 9A58     		ldr	r2, [r3, r2]
 762 002a D30F     		lsrs	r3, r2, #31
 763 002c 9A18     		adds	r2, r3, r2
 764 002e 5310     		asrs	r3, r2, #1
 765 0030 06E0     		b	.L62
 766              	.L61:
 767              		.loc 1 775 0 discriminator 2
 768 0032 A300     		lsls	r3, r4, #2
 769 0034 084A     		ldr	r2, .L63+8
 770 0036 9A58     		ldr	r2, [r3, r2]
 771 0038 D30F     		lsrs	r3, r2, #31
 772 003a 9A18     		adds	r2, r3, r2
 773 003c 5210     		asrs	r2, r2, #1
 774 003e 5342     		rsbs	r3, r2, #0
 775              	.L62:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 776              		.loc 1 774 0 is_stmt 1
 777 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 778              		.loc 1 776 0
 779 0042 A400     		lsls	r4, r4, #2
 780              	.LVL51:
 781 0044 044B     		ldr	r3, .L63+8
 782 0046 E158     		ldr	r1, [r4, r3]
 783              	.LVL52:
 784 0048 FFF7FEFF 		bl	__aeabi_idiv
 785              	.LVL53:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 786              		.loc 1 774 0
 787 004c 00B2     		sxth	r0, r0
 788              	.LVL54:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 789              		.loc 1 779 0
 790              		@ sp needed
 791 004e 70BD     		pop	{r4, r5, r6, pc}
 792              	.L64:
 793              		.align	2
 794              	.L63:
 795 0050 00000000 		.word	ADC_offset
 796 0054 10270000 		.word	10000
 797 0058 00000000 		.word	ADC_countsPer10Volt
 798              		.cfi_endproc
 799              	.LFE15:
 800              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 801              		.global	__aeabi_lmul
 802              		.global	__aeabi_ldivmod
 803              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 804              		.align	2
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 29


 805              		.global	ADC_CountsTo_uVolts
 806              		.code	16
 807              		.thumb_func
 808              		.type	ADC_CountsTo_uVolts, %function
 809              	ADC_CountsTo_uVolts:
 810              	.LFB16:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 811              		.loc 1 811 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              	.LVL55:
 816 0000 70B5     		push	{r4, r5, r6, lr}
 817              		.cfi_def_cfa_offset 16
 818              		.cfi_offset 4, -16
 819              		.cfi_offset 5, -12
 820              		.cfi_offset 6, -8
 821              		.cfi_offset 14, -4
 822 0002 0500     		movs	r5, r0
 823 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 824              		.loc 1 815 0
 825 0006 0028     		cmp	r0, #0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 30


 826 0008 02D0     		beq	.L66
 827              		.loc 1 815 0 is_stmt 0 discriminator 1
 828 000a 0020     		movs	r0, #0
 829              	.LVL56:
 830 000c FFF7FEFF 		bl	CyHalt
 831              	.LVL57:
 832              	.L66:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 833              		.loc 1 826 0 is_stmt 1
 834 0010 6A00     		lsls	r2, r5, #1
 835 0012 084B     		ldr	r3, .L67
 836 0014 D05A     		ldrh	r0, [r2, r3]
 837 0016 00B2     		sxth	r0, r0
 838 0018 201A     		subs	r0, r4, r0
 839 001a 00B2     		sxth	r0, r0
 840              	.LVL58:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 841              		.loc 1 828 0
 842 001c C117     		asrs	r1, r0, #31
 843 001e 064A     		ldr	r2, .L67+4
 844 0020 0023     		movs	r3, #0
 845 0022 FFF7FEFF 		bl	__aeabi_lmul
 846              	.LVL59:
 847 0026 AD00     		lsls	r5, r5, #2
 848              	.LVL60:
 849 0028 044B     		ldr	r3, .L67+8
 850 002a EA58     		ldr	r2, [r5, r3]
 851 002c D317     		asrs	r3, r2, #31
 852 002e FFF7FEFF 		bl	__aeabi_ldivmod
 853              	.LVL61:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 854              		.loc 1 831 0
 855              		@ sp needed
 856 0032 70BD     		pop	{r4, r5, r6, pc}
 857              	.L68:
 858              		.align	2
 859              	.L67:
 860 0034 00000000 		.word	ADC_offset
 861 0038 80969800 		.word	10000000
 862 003c 00000000 		.word	ADC_countsPer10Volt
 863              		.cfi_endproc
 864              	.LFE16:
 865              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 866              		.global	__aeabi_i2f
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 31


 867              		.global	__aeabi_fmul
 868              		.global	__aeabi_fdiv
 869              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 870              		.align	2
 871              		.global	ADC_CountsTo_Volts
 872              		.code	16
 873              		.thumb_func
 874              		.type	ADC_CountsTo_Volts, %function
 875              	ADC_CountsTo_Volts:
 876              	.LFB17:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 877              		.loc 1 856 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              	.LVL62:
 882 0000 70B5     		push	{r4, r5, r6, lr}
 883              		.cfi_def_cfa_offset 16
 884              		.cfi_offset 4, -16
 885              		.cfi_offset 5, -12
 886              		.cfi_offset 6, -8
 887              		.cfi_offset 14, -4
 888 0002 0400     		movs	r4, r0
 889 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 890              		.loc 1 860 0
 891 0006 0028     		cmp	r0, #0
 892 0008 02D0     		beq	.L70
 893              		.loc 1 860 0 is_stmt 0 discriminator 1
 894 000a 0020     		movs	r0, #0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 32


 895              	.LVL63:
 896 000c FFF7FEFF 		bl	CyHalt
 897              	.LVL64:
 898              	.L70:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 899              		.loc 1 871 0 is_stmt 1
 900 0010 6200     		lsls	r2, r4, #1
 901 0012 0A4B     		ldr	r3, .L71
 902 0014 D05A     		ldrh	r0, [r2, r3]
 903 0016 00B2     		sxth	r0, r0
 904 0018 281A     		subs	r0, r5, r0
 905 001a 00B2     		sxth	r0, r0
 906              	.LVL65:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 907              		.loc 1 873 0
 908 001c FFF7FEFF 		bl	__aeabi_i2f
 909              	.LVL66:
 910 0020 0749     		ldr	r1, .L71+4
 911 0022 FFF7FEFF 		bl	__aeabi_fmul
 912              	.LVL67:
 913 0026 051C     		adds	r5, r0, #0
 914 0028 A400     		lsls	r4, r4, #2
 915              	.LVL68:
 916 002a 064B     		ldr	r3, .L71+8
 917 002c E058     		ldr	r0, [r4, r3]
 918 002e FFF7FEFF 		bl	__aeabi_i2f
 919              	.LVL69:
 920 0032 011C     		adds	r1, r0, #0
 921 0034 281C     		adds	r0, r5, #0
 922 0036 FFF7FEFF 		bl	__aeabi_fdiv
 923              	.LVL70:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 924              		.loc 1 876 0
 925              		@ sp needed
 926 003a 70BD     		pop	{r4, r5, r6, pc}
 927              	.L72:
 928              		.align	2
 929              	.L71:
 930 003c 00000000 		.word	ADC_offset
 931 0040 00002041 		.word	1092616192
 932 0044 00000000 		.word	ADC_countsPer10Volt
 933              		.cfi_endproc
 934              	.LFE17:
 935              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 33


 936              		.comm	ADC_countsPer10Volt,4,4
 937              		.comm	ADC_offset,2,4
 938              		.global	ADC_initVar
 939              		.bss
 940              		.set	.LANCHOR0,. + 0
 941              		.type	ADC_initVar, %object
 942              		.size	ADC_initVar, 1
 943              	ADC_initVar:
 944 0000 00       		.space	1
 945              		.text
 946              	.Letext0:
 947              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 948              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 949              		.section	.debug_info,"",%progbits
 950              	.Ldebug_info0:
 951 0000 75050000 		.4byte	0x575
 952 0004 0400     		.2byte	0x4
 953 0006 00000000 		.4byte	.Ldebug_abbrev0
 954 000a 04       		.byte	0x4
 955 000b 01       		.uleb128 0x1
 956 000c 32000000 		.4byte	.LASF63
 957 0010 0C       		.byte	0xc
 958 0011 C7020000 		.4byte	.LASF64
 959 0015 C0000000 		.4byte	.LASF65
 960 0019 00000000 		.4byte	.Ldebug_ranges0+0
 961 001d 00000000 		.4byte	0
 962 0021 00000000 		.4byte	.Ldebug_line0
 963 0025 02       		.uleb128 0x2
 964 0026 01       		.byte	0x1
 965 0027 06       		.byte	0x6
 966 0028 1E010000 		.4byte	.LASF0
 967 002c 02       		.uleb128 0x2
 968 002d 01       		.byte	0x1
 969 002e 08       		.byte	0x8
 970 002f 2B030000 		.4byte	.LASF1
 971 0033 02       		.uleb128 0x2
 972 0034 02       		.byte	0x2
 973 0035 05       		.byte	0x5
 974 0036 44030000 		.4byte	.LASF2
 975 003a 02       		.uleb128 0x2
 976 003b 02       		.byte	0x2
 977 003c 07       		.byte	0x7
 978 003d 16020000 		.4byte	.LASF3
 979 0041 02       		.uleb128 0x2
 980 0042 04       		.byte	0x4
 981 0043 05       		.byte	0x5
 982 0044 58010000 		.4byte	.LASF4
 983 0048 02       		.uleb128 0x2
 984 0049 04       		.byte	0x4
 985 004a 07       		.byte	0x7
 986 004b E5010000 		.4byte	.LASF5
 987 004f 02       		.uleb128 0x2
 988 0050 08       		.byte	0x8
 989 0051 05       		.byte	0x5
 990 0052 10010000 		.4byte	.LASF6
 991 0056 02       		.uleb128 0x2
 992 0057 08       		.byte	0x8
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 34


 993 0058 07       		.byte	0x7
 994 0059 31010000 		.4byte	.LASF7
 995 005d 03       		.uleb128 0x3
 996 005e 04       		.byte	0x4
 997 005f 05       		.byte	0x5
 998 0060 696E7400 		.ascii	"int\000"
 999 0064 02       		.uleb128 0x2
 1000 0065 04       		.byte	0x4
 1001 0066 07       		.byte	0x7
 1002 0067 D1010000 		.4byte	.LASF8
 1003 006b 04       		.uleb128 0x4
 1004 006c 89010000 		.4byte	.LASF9
 1005 0070 02       		.byte	0x2
 1006 0071 F701     		.2byte	0x1f7
 1007 0073 2C000000 		.4byte	0x2c
 1008 0077 04       		.uleb128 0x4
 1009 0078 00000000 		.4byte	.LASF10
 1010 007c 02       		.byte	0x2
 1011 007d F801     		.2byte	0x1f8
 1012 007f 3A000000 		.4byte	0x3a
 1013 0083 04       		.uleb128 0x4
 1014 0084 A0010000 		.4byte	.LASF11
 1015 0088 02       		.byte	0x2
 1016 0089 F901     		.2byte	0x1f9
 1017 008b 48000000 		.4byte	0x48
 1018 008f 04       		.uleb128 0x4
 1019 0090 96030000 		.4byte	.LASF12
 1020 0094 02       		.byte	0x2
 1021 0095 FB01     		.2byte	0x1fb
 1022 0097 33000000 		.4byte	0x33
 1023 009b 04       		.uleb128 0x4
 1024 009c 48010000 		.4byte	.LASF13
 1025 00a0 02       		.byte	0x2
 1026 00a1 FC01     		.2byte	0x1fc
 1027 00a3 41000000 		.4byte	0x41
 1028 00a7 04       		.uleb128 0x4
 1029 00a8 55020000 		.4byte	.LASF14
 1030 00ac 02       		.byte	0x2
 1031 00ad FD01     		.2byte	0x1fd
 1032 00af B3000000 		.4byte	0xb3
 1033 00b3 02       		.uleb128 0x2
 1034 00b4 04       		.byte	0x4
 1035 00b5 04       		.byte	0x4
 1036 00b6 F0020000 		.4byte	.LASF15
 1037 00ba 02       		.uleb128 0x2
 1038 00bb 08       		.byte	0x8
 1039 00bc 04       		.byte	0x4
 1040 00bd 99010000 		.4byte	.LASF16
 1041 00c1 04       		.uleb128 0x4
 1042 00c2 A0020000 		.4byte	.LASF17
 1043 00c6 02       		.byte	0x2
 1044 00c7 0202     		.2byte	0x202
 1045 00c9 4F000000 		.4byte	0x4f
 1046 00cd 02       		.uleb128 0x2
 1047 00ce 01       		.byte	0x1
 1048 00cf 08       		.byte	0x8
 1049 00d0 62030000 		.4byte	.LASF18
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 35


 1050 00d4 04       		.uleb128 0x4
 1051 00d5 4F020000 		.4byte	.LASF19
 1052 00d9 02       		.byte	0x2
 1053 00da A302     		.2byte	0x2a3
 1054 00dc E0000000 		.4byte	0xe0
 1055 00e0 05       		.uleb128 0x5
 1056 00e1 83000000 		.4byte	0x83
 1057 00e5 02       		.uleb128 0x2
 1058 00e6 08       		.byte	0x8
 1059 00e7 04       		.byte	0x4
 1060 00e8 6F020000 		.4byte	.LASF20
 1061 00ec 02       		.uleb128 0x2
 1062 00ed 04       		.byte	0x4
 1063 00ee 07       		.byte	0x7
 1064 00ef 5D020000 		.4byte	.LASF21
 1065 00f3 06       		.uleb128 0x6
 1066 00f4 29000000 		.4byte	.LASF25
 1067 00f8 01       		.byte	0x1
 1068 00f9 5E       		.byte	0x5e
 1069 00fa 00000000 		.4byte	.LFB1
 1070 00fe FC000000 		.4byte	.LFE1-.LFB1
 1071 0102 01       		.uleb128 0x1
 1072 0103 9C       		.byte	0x9c
 1073 0104 5D010000 		.4byte	0x15d
 1074 0108 07       		.uleb128 0x7
 1075 0109 57030000 		.4byte	.LASF22
 1076 010d 01       		.byte	0x1
 1077 010e 60       		.byte	0x60
 1078 010f 83000000 		.4byte	0x83
 1079 0113 00000000 		.4byte	.LLST0
 1080 0117 07       		.uleb128 0x7
 1081 0118 0C020000 		.4byte	.LASF23
 1082 011c 01       		.byte	0x1
 1083 011d 61       		.byte	0x61
 1084 011e 83000000 		.4byte	0x83
 1085 0122 1F000000 		.4byte	.LLST1
 1086 0126 07       		.uleb128 0x7
 1087 0127 0F000000 		.4byte	.LASF24
 1088 012b 01       		.byte	0x1
 1089 012c 62       		.byte	0x62
 1090 012d 9B000000 		.4byte	0x9b
 1091 0131 60000000 		.4byte	.LLST2
 1092 0135 08       		.uleb128 0x8
 1093 0136 0A000000 		.4byte	.LVL0
 1094 013a 4C050000 		.4byte	0x54c
 1095 013e 4D010000 		.4byte	0x14d
 1096 0142 09       		.uleb128 0x9
 1097 0143 01       		.uleb128 0x1
 1098 0144 50       		.byte	0x50
 1099 0145 01       		.uleb128 0x1
 1100 0146 3E       		.byte	0x3e
 1101 0147 09       		.uleb128 0x9
 1102 0148 01       		.uleb128 0x1
 1103 0149 51       		.byte	0x51
 1104 014a 01       		.uleb128 0x1
 1105 014b 33       		.byte	0x33
 1106 014c 00       		.byte	0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 36


 1107 014d 0A       		.uleb128 0xa
 1108 014e 12000000 		.4byte	.LVL1
 1109 0152 57050000 		.4byte	0x557
 1110 0156 09       		.uleb128 0x9
 1111 0157 01       		.uleb128 0x1
 1112 0158 50       		.byte	0x50
 1113 0159 01       		.uleb128 0x1
 1114 015a 3E       		.byte	0x3e
 1115 015b 00       		.byte	0
 1116 015c 00       		.byte	0
 1117 015d 0B       		.uleb128 0xb
 1118 015e 8B030000 		.4byte	.LASF26
 1119 0162 01       		.byte	0x1
 1120 0163 4A01     		.2byte	0x14a
 1121 0165 00000000 		.4byte	.LFB2
 1122 0169 24000000 		.4byte	.LFE2-.LFB2
 1123 016d 01       		.uleb128 0x1
 1124 016e 9C       		.byte	0x9c
 1125 016f 83010000 		.4byte	0x183
 1126 0173 0A       		.uleb128 0xa
 1127 0174 1C000000 		.4byte	.LVL10
 1128 0178 62050000 		.4byte	0x562
 1129 017c 09       		.uleb128 0x9
 1130 017d 01       		.uleb128 0x1
 1131 017e 50       		.byte	0x50
 1132 017f 01       		.uleb128 0x1
 1133 0180 3A       		.byte	0x3a
 1134 0181 00       		.byte	0
 1135 0182 00       		.byte	0
 1136 0183 06       		.uleb128 0x6
 1137 0184 4E010000 		.4byte	.LASF27
 1138 0188 01       		.byte	0x1
 1139 0189 3F       		.byte	0x3f
 1140 018a 00000000 		.4byte	.LFB0
 1141 018e 20000000 		.4byte	.LFE0-.LFB0
 1142 0192 01       		.uleb128 0x1
 1143 0193 9C       		.byte	0x9c
 1144 0194 AB010000 		.4byte	0x1ab
 1145 0198 0C       		.uleb128 0xc
 1146 0199 0E000000 		.4byte	.LVL11
 1147 019d F3000000 		.4byte	0xf3
 1148 01a1 0C       		.uleb128 0xc
 1149 01a2 18000000 		.4byte	.LVL12
 1150 01a6 5D010000 		.4byte	0x15d
 1151 01aa 00       		.byte	0
 1152 01ab 0D       		.uleb128 0xd
 1153 01ac 4E030000 		.4byte	.LASF28
 1154 01b0 01       		.byte	0x1
 1155 01b1 6D01     		.2byte	0x16d
 1156 01b3 00000000 		.4byte	.LFB3
 1157 01b7 10000000 		.4byte	.LFE3-.LFB3
 1158 01bb 01       		.uleb128 0x1
 1159 01bc 9C       		.byte	0x9c
 1160 01bd 0D       		.uleb128 0xd
 1161 01be FF000000 		.4byte	.LASF29
 1162 01c2 01       		.byte	0x1
 1163 01c3 8701     		.2byte	0x187
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 37


 1164 01c5 00000000 		.4byte	.LFB4
 1165 01c9 0C000000 		.4byte	.LFE4-.LFB4
 1166 01cd 01       		.uleb128 0x1
 1167 01ce 9C       		.byte	0x9c
 1168 01cf 0D       		.uleb128 0xd
 1169 01d0 38020000 		.4byte	.LASF30
 1170 01d4 01       		.byte	0x1
 1171 01d5 A001     		.2byte	0x1a0
 1172 01d7 00000000 		.4byte	.LFB5
 1173 01db 02000000 		.4byte	.LFE5-.LFB5
 1174 01df 01       		.uleb128 0x1
 1175 01e0 9C       		.byte	0x9c
 1176 01e1 0E       		.uleb128 0xe
 1177 01e2 8C020000 		.4byte	.LASF32
 1178 01e6 01       		.byte	0x1
 1179 01e7 C201     		.2byte	0x1c2
 1180 01e9 83000000 		.4byte	0x83
 1181 01ed 00000000 		.4byte	.LFB6
 1182 01f1 28000000 		.4byte	.LFE6-.LFB6
 1183 01f5 01       		.uleb128 0x1
 1184 01f6 9C       		.byte	0x9c
 1185 01f7 1C020000 		.4byte	0x21c
 1186 01fb 0F       		.uleb128 0xf
 1187 01fc B8010000 		.4byte	.LASF34
 1188 0200 01       		.byte	0x1
 1189 0201 C201     		.2byte	0x1c2
 1190 0203 83000000 		.4byte	0x83
 1191 0207 76000000 		.4byte	.LLST3
 1192 020b 10       		.uleb128 0x10
 1193 020c 2A010000 		.4byte	.LASF31
 1194 0210 01       		.byte	0x1
 1195 0211 C401     		.2byte	0x1c4
 1196 0213 83000000 		.4byte	0x83
 1197 0217 BB000000 		.4byte	.LLST4
 1198 021b 00       		.byte	0
 1199 021c 0E       		.uleb128 0xe
 1200 021d B1030000 		.4byte	.LASF33
 1201 0221 01       		.byte	0x1
 1202 0222 F801     		.2byte	0x1f8
 1203 0224 8F000000 		.4byte	0x8f
 1204 0228 00000000 		.4byte	.LFB7
 1205 022c 2C000000 		.4byte	.LFE7-.LFB7
 1206 0230 01       		.uleb128 0x1
 1207 0231 9C       		.byte	0x9c
 1208 0232 66020000 		.4byte	0x266
 1209 0236 0F       		.uleb128 0xf
 1210 0237 5D030000 		.4byte	.LASF35
 1211 023b 01       		.byte	0x1
 1212 023c F801     		.2byte	0x1f8
 1213 023e 83000000 		.4byte	0x83
 1214 0242 F1000000 		.4byte	.LLST5
 1215 0246 10       		.uleb128 0x10
 1216 0247 AA030000 		.4byte	.LASF36
 1217 024b 01       		.byte	0x1
 1218 024c FA01     		.2byte	0x1fa
 1219 024e 83000000 		.4byte	0x83
 1220 0252 36010000 		.4byte	.LLST6
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 38


 1221 0256 0A       		.uleb128 0xa
 1222 0257 0C000000 		.4byte	.LVL22
 1223 025b 6D050000 		.4byte	0x56d
 1224 025f 09       		.uleb128 0x9
 1225 0260 01       		.uleb128 0x1
 1226 0261 50       		.byte	0x50
 1227 0262 01       		.uleb128 0x1
 1228 0263 30       		.byte	0x30
 1229 0264 00       		.byte	0
 1230 0265 00       		.byte	0
 1231 0266 0B       		.uleb128 0xb
 1232 0267 B7020000 		.4byte	.LASF37
 1233 026b 01       		.byte	0x1
 1234 026c 2502     		.2byte	0x225
 1235 026e 00000000 		.4byte	.LFB8
 1236 0272 10000000 		.4byte	.LFE8-.LFB8
 1237 0276 01       		.uleb128 0x1
 1238 0277 9C       		.byte	0x9c
 1239 0278 8D020000 		.4byte	0x28d
 1240 027c 0F       		.uleb128 0xf
 1241 027d A7010000 		.4byte	.LASF38
 1242 0281 01       		.byte	0x1
 1243 0282 2502     		.2byte	0x225
 1244 0284 83000000 		.4byte	0x83
 1245 0288 54010000 		.4byte	.LLST7
 1246 028c 00       		.byte	0
 1247 028d 0B       		.uleb128 0xb
 1248 028e 14030000 		.4byte	.LASF39
 1249 0292 01       		.byte	0x1
 1250 0293 5102     		.2byte	0x251
 1251 0295 00000000 		.4byte	.LFB9
 1252 0299 1C000000 		.4byte	.LFE9-.LFB9
 1253 029d 01       		.uleb128 0x1
 1254 029e 9C       		.byte	0x9c
 1255 029f B4020000 		.4byte	0x2b4
 1256 02a3 0F       		.uleb128 0xf
 1257 02a4 66020000 		.4byte	.LASF40
 1258 02a8 01       		.byte	0x1
 1259 02a9 5102     		.2byte	0x251
 1260 02ab 83000000 		.4byte	0x83
 1261 02af 75010000 		.4byte	.LLST8
 1262 02b3 00       		.byte	0
 1263 02b4 0B       		.uleb128 0xb
 1264 02b5 7B020000 		.4byte	.LASF41
 1265 02b9 01       		.byte	0x1
 1266 02ba 6602     		.2byte	0x266
 1267 02bc 00000000 		.4byte	.LFB10
 1268 02c0 18000000 		.4byte	.LFE10-.LFB10
 1269 02c4 01       		.uleb128 0x1
 1270 02c5 9C       		.byte	0x9c
 1271 02c6 DB020000 		.4byte	0x2db
 1272 02ca 0F       		.uleb128 0xf
 1273 02cb F6020000 		.4byte	.LASF42
 1274 02cf 01       		.byte	0x1
 1275 02d0 6602     		.2byte	0x266
 1276 02d2 83000000 		.4byte	0x83
 1277 02d6 96010000 		.4byte	.LLST9
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 39


 1278 02da 00       		.byte	0
 1279 02db 0B       		.uleb128 0xb
 1280 02dc C0010000 		.4byte	.LASF43
 1281 02e0 01       		.byte	0x1
 1282 02e1 7E02     		.2byte	0x27e
 1283 02e3 00000000 		.4byte	.LFB11
 1284 02e7 10000000 		.4byte	.LFE11-.LFB11
 1285 02eb 01       		.uleb128 0x1
 1286 02ec 9C       		.byte	0x9c
 1287 02ed 02030000 		.4byte	0x302
 1288 02f1 0F       		.uleb128 0xf
 1289 02f2 A7010000 		.4byte	.LASF38
 1290 02f6 01       		.byte	0x1
 1291 02f7 7E02     		.2byte	0x27e
 1292 02f9 83000000 		.4byte	0x83
 1293 02fd B7010000 		.4byte	.LLST10
 1294 0301 00       		.byte	0
 1295 0302 0B       		.uleb128 0xb
 1296 0303 F7010000 		.4byte	.LASF44
 1297 0307 01       		.byte	0x1
 1298 0308 9502     		.2byte	0x295
 1299 030a 00000000 		.4byte	.LFB12
 1300 030e 10000000 		.4byte	.LFE12-.LFB12
 1301 0312 01       		.uleb128 0x1
 1302 0313 9C       		.byte	0x9c
 1303 0314 29030000 		.4byte	0x329
 1304 0318 0F       		.uleb128 0xf
 1305 0319 A7010000 		.4byte	.LASF38
 1306 031d 01       		.byte	0x1
 1307 031e 9502     		.2byte	0x295
 1308 0320 83000000 		.4byte	0x83
 1309 0324 D8010000 		.4byte	.LLST11
 1310 0328 00       		.byte	0
 1311 0329 0B       		.uleb128 0xb
 1312 032a 9C030000 		.4byte	.LASF45
 1313 032e 01       		.byte	0x1
 1314 032f B102     		.2byte	0x2b1
 1315 0331 00000000 		.4byte	.LFB13
 1316 0335 1C000000 		.4byte	.LFE13-.LFB13
 1317 0339 01       		.uleb128 0x1
 1318 033a 9C       		.byte	0x9c
 1319 033b 6F030000 		.4byte	0x36f
 1320 033f 0F       		.uleb128 0xf
 1321 0340 5D030000 		.4byte	.LASF35
 1322 0344 01       		.byte	0x1
 1323 0345 B102     		.2byte	0x2b1
 1324 0347 83000000 		.4byte	0x83
 1325 034b F9010000 		.4byte	.LLST12
 1326 034f 0F       		.uleb128 0xf
 1327 0350 7A030000 		.4byte	.LASF46
 1328 0354 01       		.byte	0x1
 1329 0355 B102     		.2byte	0x2b1
 1330 0357 8F000000 		.4byte	0x8f
 1331 035b 25020000 		.4byte	.LLST13
 1332 035f 0A       		.uleb128 0xa
 1333 0360 10000000 		.4byte	.LVL40
 1334 0364 6D050000 		.4byte	0x56d
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 40


 1335 0368 09       		.uleb128 0x9
 1336 0369 01       		.uleb128 0x1
 1337 036a 50       		.byte	0x50
 1338 036b 01       		.uleb128 0x1
 1339 036c 30       		.byte	0x30
 1340 036d 00       		.byte	0
 1341 036e 00       		.byte	0
 1342 036f 0B       		.uleb128 0xb
 1343 0370 E4020000 		.4byte	.LASF47
 1344 0374 01       		.byte	0x1
 1345 0375 D302     		.2byte	0x2d3
 1346 0377 00000000 		.4byte	.LFB14
 1347 037b 1C000000 		.4byte	.LFE14-.LFB14
 1348 037f 01       		.uleb128 0x1
 1349 0380 9C       		.byte	0x9c
 1350 0381 B5030000 		.4byte	0x3b5
 1351 0385 0F       		.uleb128 0xf
 1352 0386 5D030000 		.4byte	.LASF35
 1353 038a 01       		.byte	0x1
 1354 038b D302     		.2byte	0x2d3
 1355 038d 83000000 		.4byte	0x83
 1356 0391 46020000 		.4byte	.LLST14
 1357 0395 0F       		.uleb128 0xf
 1358 0396 07000000 		.4byte	.LASF48
 1359 039a 01       		.byte	0x1
 1360 039b D302     		.2byte	0x2d3
 1361 039d 9B000000 		.4byte	0x9b
 1362 03a1 72020000 		.4byte	.LLST15
 1363 03a5 0A       		.uleb128 0xa
 1364 03a6 10000000 		.4byte	.LVL44
 1365 03aa 6D050000 		.4byte	0x56d
 1366 03ae 09       		.uleb128 0x9
 1367 03af 01       		.uleb128 0x1
 1368 03b0 50       		.byte	0x50
 1369 03b1 01       		.uleb128 0x1
 1370 03b2 30       		.byte	0x30
 1371 03b3 00       		.byte	0
 1372 03b4 00       		.byte	0
 1373 03b5 11       		.uleb128 0x11
 1374 03b6 00030000 		.4byte	.LASF49
 1375 03ba 01       		.byte	0x1
 1376 03bb F402     		.2byte	0x2f4
 1377 03bd 8F000000 		.4byte	0x8f
 1378 03c1 00000000 		.4byte	.LFB15
 1379 03c5 5C000000 		.4byte	.LFE15-.LFB15
 1380 03c9 01       		.uleb128 0x1
 1381 03ca 9C       		.byte	0x9c
 1382 03cb 0D040000 		.4byte	0x40d
 1383 03cf 0F       		.uleb128 0xf
 1384 03d0 5D030000 		.4byte	.LASF35
 1385 03d4 01       		.byte	0x1
 1386 03d5 F402     		.2byte	0x2f4
 1387 03d7 83000000 		.4byte	0x83
 1388 03db A2020000 		.4byte	.LLST16
 1389 03df 0F       		.uleb128 0xf
 1390 03e0 81030000 		.4byte	.LASF50
 1391 03e4 01       		.byte	0x1
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 41


 1392 03e5 F402     		.2byte	0x2f4
 1393 03e7 8F000000 		.4byte	0x8f
 1394 03eb CE020000 		.4byte	.LLST17
 1395 03ef 12       		.uleb128 0x12
 1396 03f0 48020000 		.4byte	.LASF51
 1397 03f4 01       		.byte	0x1
 1398 03f5 F602     		.2byte	0x2f6
 1399 03f7 8F000000 		.4byte	0x8f
 1400 03fb 01       		.uleb128 0x1
 1401 03fc 50       		.byte	0x50
 1402 03fd 0A       		.uleb128 0xa
 1403 03fe 10000000 		.4byte	.LVL49
 1404 0402 6D050000 		.4byte	0x56d
 1405 0406 09       		.uleb128 0x9
 1406 0407 01       		.uleb128 0x1
 1407 0408 50       		.byte	0x50
 1408 0409 01       		.uleb128 0x1
 1409 040a 30       		.byte	0x30
 1410 040b 00       		.byte	0
 1411 040c 00       		.byte	0
 1412 040d 11       		.uleb128 0x11
 1413 040e 61010000 		.4byte	.LASF52
 1414 0412 01       		.byte	0x1
 1415 0413 2A03     		.2byte	0x32a
 1416 0415 9B000000 		.4byte	0x9b
 1417 0419 00000000 		.4byte	.LFB16
 1418 041d 40000000 		.4byte	.LFE16-.LFB16
 1419 0421 01       		.uleb128 0x1
 1420 0422 9C       		.byte	0x9c
 1421 0423 63040000 		.4byte	0x463
 1422 0427 0F       		.uleb128 0xf
 1423 0428 5D030000 		.4byte	.LASF35
 1424 042c 01       		.byte	0x1
 1425 042d 2A03     		.2byte	0x32a
 1426 042f 83000000 		.4byte	0x83
 1427 0433 FA020000 		.4byte	.LLST18
 1428 0437 0F       		.uleb128 0xf
 1429 0438 81030000 		.4byte	.LASF50
 1430 043c 01       		.byte	0x1
 1431 043d 2A03     		.2byte	0x32a
 1432 043f 8F000000 		.4byte	0x8f
 1433 0443 26030000 		.4byte	.LLST19
 1434 0447 13       		.uleb128 0x13
 1435 0448 DE010000 		.4byte	.LASF66
 1436 044c 01       		.byte	0x1
 1437 044d 2C03     		.2byte	0x32c
 1438 044f C1000000 		.4byte	0xc1
 1439 0453 0A       		.uleb128 0xa
 1440 0454 10000000 		.4byte	.LVL57
 1441 0458 6D050000 		.4byte	0x56d
 1442 045c 09       		.uleb128 0x9
 1443 045d 01       		.uleb128 0x1
 1444 045e 50       		.byte	0x50
 1445 045f 01       		.uleb128 0x1
 1446 0460 30       		.byte	0x30
 1447 0461 00       		.byte	0
 1448 0462 00       		.byte	0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 42


 1449 0463 11       		.uleb128 0x11
 1450 0464 16000000 		.4byte	.LASF53
 1451 0468 01       		.byte	0x1
 1452 0469 5703     		.2byte	0x357
 1453 046b A7000000 		.4byte	0xa7
 1454 046f 00000000 		.4byte	.LFB17
 1455 0473 48000000 		.4byte	.LFE17-.LFB17
 1456 0477 01       		.uleb128 0x1
 1457 0478 9C       		.byte	0x9c
 1458 0479 BB040000 		.4byte	0x4bb
 1459 047d 0F       		.uleb128 0xf
 1460 047e 5D030000 		.4byte	.LASF35
 1461 0482 01       		.byte	0x1
 1462 0483 5703     		.2byte	0x357
 1463 0485 83000000 		.4byte	0x83
 1464 0489 52030000 		.4byte	.LLST20
 1465 048d 0F       		.uleb128 0xf
 1466 048e 81030000 		.4byte	.LASF50
 1467 0492 01       		.byte	0x1
 1468 0493 5703     		.2byte	0x357
 1469 0495 8F000000 		.4byte	0x8f
 1470 0499 7E030000 		.4byte	.LLST21
 1471 049d 12       		.uleb128 0x12
 1472 049e 06020000 		.4byte	.LASF54
 1473 04a2 01       		.byte	0x1
 1474 04a3 5903     		.2byte	0x359
 1475 04a5 A7000000 		.4byte	0xa7
 1476 04a9 01       		.uleb128 0x1
 1477 04aa 50       		.byte	0x50
 1478 04ab 0A       		.uleb128 0xa
 1479 04ac 10000000 		.4byte	.LVL64
 1480 04b0 6D050000 		.4byte	0x56d
 1481 04b4 09       		.uleb128 0x9
 1482 04b5 01       		.uleb128 0x1
 1483 04b6 50       		.byte	0x50
 1484 04b7 01       		.uleb128 0x1
 1485 04b8 30       		.byte	0x30
 1486 04b9 00       		.byte	0
 1487 04ba 00       		.byte	0
 1488 04bb 14       		.uleb128 0x14
 1489 04bc CB040000 		.4byte	0x4cb
 1490 04c0 CB040000 		.4byte	0x4cb
 1491 04c4 15       		.uleb128 0x15
 1492 04c5 EC000000 		.4byte	0xec
 1493 04c9 00       		.byte	0
 1494 04ca 00       		.byte	0
 1495 04cb 16       		.uleb128 0x16
 1496 04cc 83000000 		.4byte	0x83
 1497 04d0 17       		.uleb128 0x17
 1498 04d1 67030000 		.4byte	.LASF55
 1499 04d5 01       		.byte	0x1
 1500 04d6 21       		.byte	0x21
 1501 04d7 E0040000 		.4byte	0x4e0
 1502 04db 04       		.byte	0x4
 1503 04dc 00       		.byte	0
 1504 04dd 00       		.byte	0
 1505 04de 00       		.byte	0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 43


 1506 04df 00       		.byte	0
 1507 04e0 16       		.uleb128 0x16
 1508 04e1 BB040000 		.4byte	0x4bb
 1509 04e5 18       		.uleb128 0x18
 1510 04e6 AC010000 		.4byte	.LASF56
 1511 04ea 01       		.byte	0x1
 1512 04eb 18       		.byte	0x18
 1513 04ec 6B000000 		.4byte	0x6b
 1514 04f0 05       		.uleb128 0x5
 1515 04f1 03       		.byte	0x3
 1516 04f2 00000000 		.4byte	ADC_initVar
 1517 04f6 14       		.uleb128 0x14
 1518 04f7 06050000 		.4byte	0x506
 1519 04fb 06050000 		.4byte	0x506
 1520 04ff 15       		.uleb128 0x15
 1521 0500 EC000000 		.4byte	0xec
 1522 0504 00       		.byte	0
 1523 0505 00       		.byte	0
 1524 0506 05       		.uleb128 0x5
 1525 0507 8F000000 		.4byte	0x8f
 1526 050b 18       		.uleb128 0x18
 1527 050c 39030000 		.4byte	.LASF57
 1528 0510 01       		.byte	0x1
 1529 0511 19       		.byte	0x19
 1530 0512 1C050000 		.4byte	0x51c
 1531 0516 05       		.uleb128 0x5
 1532 0517 03       		.byte	0x3
 1533 0518 00000000 		.4byte	ADC_offset
 1534 051c 05       		.uleb128 0x5
 1535 051d F6040000 		.4byte	0x4f6
 1536 0521 14       		.uleb128 0x14
 1537 0522 31050000 		.4byte	0x531
 1538 0526 31050000 		.4byte	0x531
 1539 052a 15       		.uleb128 0x15
 1540 052b EC000000 		.4byte	0xec
 1541 052f 00       		.byte	0
 1542 0530 00       		.byte	0
 1543 0531 05       		.uleb128 0x5
 1544 0532 9B000000 		.4byte	0x9b
 1545 0536 18       		.uleb128 0x18
 1546 0537 75010000 		.4byte	.LASF58
 1547 053b 01       		.byte	0x1
 1548 053c 1A       		.byte	0x1a
 1549 053d 47050000 		.4byte	0x547
 1550 0541 05       		.uleb128 0x5
 1551 0542 03       		.byte	0x3
 1552 0543 00000000 		.4byte	ADC_countsPer10Volt
 1553 0547 05       		.uleb128 0x5
 1554 0548 21050000 		.4byte	0x521
 1555 054c 19       		.uleb128 0x19
 1556 054d A6020000 		.4byte	.LASF59
 1557 0551 A6020000 		.4byte	.LASF59
 1558 0555 03       		.byte	0x3
 1559 0556 D3       		.byte	0xd3
 1560 0557 19       		.uleb128 0x19
 1561 0558 29020000 		.4byte	.LASF60
 1562 055c 29020000 		.4byte	.LASF60
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 44


 1563 0560 03       		.byte	0x3
 1564 0561 D0       		.byte	0xd0
 1565 0562 19       		.uleb128 0x19
 1566 0563 8F010000 		.4byte	.LASF61
 1567 0567 8F010000 		.4byte	.LASF61
 1568 056b 03       		.byte	0x3
 1569 056c ED       		.byte	0xed
 1570 056d 19       		.uleb128 0x19
 1571 056e 24030000 		.4byte	.LASF62
 1572 0572 24030000 		.4byte	.LASF62
 1573 0576 03       		.byte	0x3
 1574 0577 FA       		.byte	0xfa
 1575 0578 00       		.byte	0
 1576              		.section	.debug_abbrev,"",%progbits
 1577              	.Ldebug_abbrev0:
 1578 0000 01       		.uleb128 0x1
 1579 0001 11       		.uleb128 0x11
 1580 0002 01       		.byte	0x1
 1581 0003 25       		.uleb128 0x25
 1582 0004 0E       		.uleb128 0xe
 1583 0005 13       		.uleb128 0x13
 1584 0006 0B       		.uleb128 0xb
 1585 0007 03       		.uleb128 0x3
 1586 0008 0E       		.uleb128 0xe
 1587 0009 1B       		.uleb128 0x1b
 1588 000a 0E       		.uleb128 0xe
 1589 000b 55       		.uleb128 0x55
 1590 000c 17       		.uleb128 0x17
 1591 000d 11       		.uleb128 0x11
 1592 000e 01       		.uleb128 0x1
 1593 000f 10       		.uleb128 0x10
 1594 0010 17       		.uleb128 0x17
 1595 0011 00       		.byte	0
 1596 0012 00       		.byte	0
 1597 0013 02       		.uleb128 0x2
 1598 0014 24       		.uleb128 0x24
 1599 0015 00       		.byte	0
 1600 0016 0B       		.uleb128 0xb
 1601 0017 0B       		.uleb128 0xb
 1602 0018 3E       		.uleb128 0x3e
 1603 0019 0B       		.uleb128 0xb
 1604 001a 03       		.uleb128 0x3
 1605 001b 0E       		.uleb128 0xe
 1606 001c 00       		.byte	0
 1607 001d 00       		.byte	0
 1608 001e 03       		.uleb128 0x3
 1609 001f 24       		.uleb128 0x24
 1610 0020 00       		.byte	0
 1611 0021 0B       		.uleb128 0xb
 1612 0022 0B       		.uleb128 0xb
 1613 0023 3E       		.uleb128 0x3e
 1614 0024 0B       		.uleb128 0xb
 1615 0025 03       		.uleb128 0x3
 1616 0026 08       		.uleb128 0x8
 1617 0027 00       		.byte	0
 1618 0028 00       		.byte	0
 1619 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 45


 1620 002a 16       		.uleb128 0x16
 1621 002b 00       		.byte	0
 1622 002c 03       		.uleb128 0x3
 1623 002d 0E       		.uleb128 0xe
 1624 002e 3A       		.uleb128 0x3a
 1625 002f 0B       		.uleb128 0xb
 1626 0030 3B       		.uleb128 0x3b
 1627 0031 05       		.uleb128 0x5
 1628 0032 49       		.uleb128 0x49
 1629 0033 13       		.uleb128 0x13
 1630 0034 00       		.byte	0
 1631 0035 00       		.byte	0
 1632 0036 05       		.uleb128 0x5
 1633 0037 35       		.uleb128 0x35
 1634 0038 00       		.byte	0
 1635 0039 49       		.uleb128 0x49
 1636 003a 13       		.uleb128 0x13
 1637 003b 00       		.byte	0
 1638 003c 00       		.byte	0
 1639 003d 06       		.uleb128 0x6
 1640 003e 2E       		.uleb128 0x2e
 1641 003f 01       		.byte	0x1
 1642 0040 3F       		.uleb128 0x3f
 1643 0041 19       		.uleb128 0x19
 1644 0042 03       		.uleb128 0x3
 1645 0043 0E       		.uleb128 0xe
 1646 0044 3A       		.uleb128 0x3a
 1647 0045 0B       		.uleb128 0xb
 1648 0046 3B       		.uleb128 0x3b
 1649 0047 0B       		.uleb128 0xb
 1650 0048 27       		.uleb128 0x27
 1651 0049 19       		.uleb128 0x19
 1652 004a 11       		.uleb128 0x11
 1653 004b 01       		.uleb128 0x1
 1654 004c 12       		.uleb128 0x12
 1655 004d 06       		.uleb128 0x6
 1656 004e 40       		.uleb128 0x40
 1657 004f 18       		.uleb128 0x18
 1658 0050 9742     		.uleb128 0x2117
 1659 0052 19       		.uleb128 0x19
 1660 0053 01       		.uleb128 0x1
 1661 0054 13       		.uleb128 0x13
 1662 0055 00       		.byte	0
 1663 0056 00       		.byte	0
 1664 0057 07       		.uleb128 0x7
 1665 0058 34       		.uleb128 0x34
 1666 0059 00       		.byte	0
 1667 005a 03       		.uleb128 0x3
 1668 005b 0E       		.uleb128 0xe
 1669 005c 3A       		.uleb128 0x3a
 1670 005d 0B       		.uleb128 0xb
 1671 005e 3B       		.uleb128 0x3b
 1672 005f 0B       		.uleb128 0xb
 1673 0060 49       		.uleb128 0x49
 1674 0061 13       		.uleb128 0x13
 1675 0062 02       		.uleb128 0x2
 1676 0063 17       		.uleb128 0x17
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 46


 1677 0064 00       		.byte	0
 1678 0065 00       		.byte	0
 1679 0066 08       		.uleb128 0x8
 1680 0067 898201   		.uleb128 0x4109
 1681 006a 01       		.byte	0x1
 1682 006b 11       		.uleb128 0x11
 1683 006c 01       		.uleb128 0x1
 1684 006d 31       		.uleb128 0x31
 1685 006e 13       		.uleb128 0x13
 1686 006f 01       		.uleb128 0x1
 1687 0070 13       		.uleb128 0x13
 1688 0071 00       		.byte	0
 1689 0072 00       		.byte	0
 1690 0073 09       		.uleb128 0x9
 1691 0074 8A8201   		.uleb128 0x410a
 1692 0077 00       		.byte	0
 1693 0078 02       		.uleb128 0x2
 1694 0079 18       		.uleb128 0x18
 1695 007a 9142     		.uleb128 0x2111
 1696 007c 18       		.uleb128 0x18
 1697 007d 00       		.byte	0
 1698 007e 00       		.byte	0
 1699 007f 0A       		.uleb128 0xa
 1700 0080 898201   		.uleb128 0x4109
 1701 0083 01       		.byte	0x1
 1702 0084 11       		.uleb128 0x11
 1703 0085 01       		.uleb128 0x1
 1704 0086 31       		.uleb128 0x31
 1705 0087 13       		.uleb128 0x13
 1706 0088 00       		.byte	0
 1707 0089 00       		.byte	0
 1708 008a 0B       		.uleb128 0xb
 1709 008b 2E       		.uleb128 0x2e
 1710 008c 01       		.byte	0x1
 1711 008d 3F       		.uleb128 0x3f
 1712 008e 19       		.uleb128 0x19
 1713 008f 03       		.uleb128 0x3
 1714 0090 0E       		.uleb128 0xe
 1715 0091 3A       		.uleb128 0x3a
 1716 0092 0B       		.uleb128 0xb
 1717 0093 3B       		.uleb128 0x3b
 1718 0094 05       		.uleb128 0x5
 1719 0095 27       		.uleb128 0x27
 1720 0096 19       		.uleb128 0x19
 1721 0097 11       		.uleb128 0x11
 1722 0098 01       		.uleb128 0x1
 1723 0099 12       		.uleb128 0x12
 1724 009a 06       		.uleb128 0x6
 1725 009b 40       		.uleb128 0x40
 1726 009c 18       		.uleb128 0x18
 1727 009d 9742     		.uleb128 0x2117
 1728 009f 19       		.uleb128 0x19
 1729 00a0 01       		.uleb128 0x1
 1730 00a1 13       		.uleb128 0x13
 1731 00a2 00       		.byte	0
 1732 00a3 00       		.byte	0
 1733 00a4 0C       		.uleb128 0xc
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 47


 1734 00a5 898201   		.uleb128 0x4109
 1735 00a8 00       		.byte	0
 1736 00a9 11       		.uleb128 0x11
 1737 00aa 01       		.uleb128 0x1
 1738 00ab 31       		.uleb128 0x31
 1739 00ac 13       		.uleb128 0x13
 1740 00ad 00       		.byte	0
 1741 00ae 00       		.byte	0
 1742 00af 0D       		.uleb128 0xd
 1743 00b0 2E       		.uleb128 0x2e
 1744 00b1 00       		.byte	0
 1745 00b2 3F       		.uleb128 0x3f
 1746 00b3 19       		.uleb128 0x19
 1747 00b4 03       		.uleb128 0x3
 1748 00b5 0E       		.uleb128 0xe
 1749 00b6 3A       		.uleb128 0x3a
 1750 00b7 0B       		.uleb128 0xb
 1751 00b8 3B       		.uleb128 0x3b
 1752 00b9 05       		.uleb128 0x5
 1753 00ba 27       		.uleb128 0x27
 1754 00bb 19       		.uleb128 0x19
 1755 00bc 11       		.uleb128 0x11
 1756 00bd 01       		.uleb128 0x1
 1757 00be 12       		.uleb128 0x12
 1758 00bf 06       		.uleb128 0x6
 1759 00c0 40       		.uleb128 0x40
 1760 00c1 18       		.uleb128 0x18
 1761 00c2 9742     		.uleb128 0x2117
 1762 00c4 19       		.uleb128 0x19
 1763 00c5 00       		.byte	0
 1764 00c6 00       		.byte	0
 1765 00c7 0E       		.uleb128 0xe
 1766 00c8 2E       		.uleb128 0x2e
 1767 00c9 01       		.byte	0x1
 1768 00ca 3F       		.uleb128 0x3f
 1769 00cb 19       		.uleb128 0x19
 1770 00cc 03       		.uleb128 0x3
 1771 00cd 0E       		.uleb128 0xe
 1772 00ce 3A       		.uleb128 0x3a
 1773 00cf 0B       		.uleb128 0xb
 1774 00d0 3B       		.uleb128 0x3b
 1775 00d1 05       		.uleb128 0x5
 1776 00d2 27       		.uleb128 0x27
 1777 00d3 19       		.uleb128 0x19
 1778 00d4 49       		.uleb128 0x49
 1779 00d5 13       		.uleb128 0x13
 1780 00d6 11       		.uleb128 0x11
 1781 00d7 01       		.uleb128 0x1
 1782 00d8 12       		.uleb128 0x12
 1783 00d9 06       		.uleb128 0x6
 1784 00da 40       		.uleb128 0x40
 1785 00db 18       		.uleb128 0x18
 1786 00dc 9742     		.uleb128 0x2117
 1787 00de 19       		.uleb128 0x19
 1788 00df 01       		.uleb128 0x1
 1789 00e0 13       		.uleb128 0x13
 1790 00e1 00       		.byte	0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 48


 1791 00e2 00       		.byte	0
 1792 00e3 0F       		.uleb128 0xf
 1793 00e4 05       		.uleb128 0x5
 1794 00e5 00       		.byte	0
 1795 00e6 03       		.uleb128 0x3
 1796 00e7 0E       		.uleb128 0xe
 1797 00e8 3A       		.uleb128 0x3a
 1798 00e9 0B       		.uleb128 0xb
 1799 00ea 3B       		.uleb128 0x3b
 1800 00eb 05       		.uleb128 0x5
 1801 00ec 49       		.uleb128 0x49
 1802 00ed 13       		.uleb128 0x13
 1803 00ee 02       		.uleb128 0x2
 1804 00ef 17       		.uleb128 0x17
 1805 00f0 00       		.byte	0
 1806 00f1 00       		.byte	0
 1807 00f2 10       		.uleb128 0x10
 1808 00f3 34       		.uleb128 0x34
 1809 00f4 00       		.byte	0
 1810 00f5 03       		.uleb128 0x3
 1811 00f6 0E       		.uleb128 0xe
 1812 00f7 3A       		.uleb128 0x3a
 1813 00f8 0B       		.uleb128 0xb
 1814 00f9 3B       		.uleb128 0x3b
 1815 00fa 05       		.uleb128 0x5
 1816 00fb 49       		.uleb128 0x49
 1817 00fc 13       		.uleb128 0x13
 1818 00fd 02       		.uleb128 0x2
 1819 00fe 17       		.uleb128 0x17
 1820 00ff 00       		.byte	0
 1821 0100 00       		.byte	0
 1822 0101 11       		.uleb128 0x11
 1823 0102 2E       		.uleb128 0x2e
 1824 0103 01       		.byte	0x1
 1825 0104 3F       		.uleb128 0x3f
 1826 0105 19       		.uleb128 0x19
 1827 0106 03       		.uleb128 0x3
 1828 0107 0E       		.uleb128 0xe
 1829 0108 3A       		.uleb128 0x3a
 1830 0109 0B       		.uleb128 0xb
 1831 010a 3B       		.uleb128 0x3b
 1832 010b 05       		.uleb128 0x5
 1833 010c 27       		.uleb128 0x27
 1834 010d 19       		.uleb128 0x19
 1835 010e 49       		.uleb128 0x49
 1836 010f 13       		.uleb128 0x13
 1837 0110 11       		.uleb128 0x11
 1838 0111 01       		.uleb128 0x1
 1839 0112 12       		.uleb128 0x12
 1840 0113 06       		.uleb128 0x6
 1841 0114 40       		.uleb128 0x40
 1842 0115 18       		.uleb128 0x18
 1843 0116 9642     		.uleb128 0x2116
 1844 0118 19       		.uleb128 0x19
 1845 0119 01       		.uleb128 0x1
 1846 011a 13       		.uleb128 0x13
 1847 011b 00       		.byte	0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 49


 1848 011c 00       		.byte	0
 1849 011d 12       		.uleb128 0x12
 1850 011e 34       		.uleb128 0x34
 1851 011f 00       		.byte	0
 1852 0120 03       		.uleb128 0x3
 1853 0121 0E       		.uleb128 0xe
 1854 0122 3A       		.uleb128 0x3a
 1855 0123 0B       		.uleb128 0xb
 1856 0124 3B       		.uleb128 0x3b
 1857 0125 05       		.uleb128 0x5
 1858 0126 49       		.uleb128 0x49
 1859 0127 13       		.uleb128 0x13
 1860 0128 02       		.uleb128 0x2
 1861 0129 18       		.uleb128 0x18
 1862 012a 00       		.byte	0
 1863 012b 00       		.byte	0
 1864 012c 13       		.uleb128 0x13
 1865 012d 34       		.uleb128 0x34
 1866 012e 00       		.byte	0
 1867 012f 03       		.uleb128 0x3
 1868 0130 0E       		.uleb128 0xe
 1869 0131 3A       		.uleb128 0x3a
 1870 0132 0B       		.uleb128 0xb
 1871 0133 3B       		.uleb128 0x3b
 1872 0134 05       		.uleb128 0x5
 1873 0135 49       		.uleb128 0x49
 1874 0136 13       		.uleb128 0x13
 1875 0137 00       		.byte	0
 1876 0138 00       		.byte	0
 1877 0139 14       		.uleb128 0x14
 1878 013a 01       		.uleb128 0x1
 1879 013b 01       		.byte	0x1
 1880 013c 49       		.uleb128 0x49
 1881 013d 13       		.uleb128 0x13
 1882 013e 01       		.uleb128 0x1
 1883 013f 13       		.uleb128 0x13
 1884 0140 00       		.byte	0
 1885 0141 00       		.byte	0
 1886 0142 15       		.uleb128 0x15
 1887 0143 21       		.uleb128 0x21
 1888 0144 00       		.byte	0
 1889 0145 49       		.uleb128 0x49
 1890 0146 13       		.uleb128 0x13
 1891 0147 2F       		.uleb128 0x2f
 1892 0148 0B       		.uleb128 0xb
 1893 0149 00       		.byte	0
 1894 014a 00       		.byte	0
 1895 014b 16       		.uleb128 0x16
 1896 014c 26       		.uleb128 0x26
 1897 014d 00       		.byte	0
 1898 014e 49       		.uleb128 0x49
 1899 014f 13       		.uleb128 0x13
 1900 0150 00       		.byte	0
 1901 0151 00       		.byte	0
 1902 0152 17       		.uleb128 0x17
 1903 0153 34       		.uleb128 0x34
 1904 0154 00       		.byte	0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 50


 1905 0155 03       		.uleb128 0x3
 1906 0156 0E       		.uleb128 0xe
 1907 0157 3A       		.uleb128 0x3a
 1908 0158 0B       		.uleb128 0xb
 1909 0159 3B       		.uleb128 0x3b
 1910 015a 0B       		.uleb128 0xb
 1911 015b 49       		.uleb128 0x49
 1912 015c 13       		.uleb128 0x13
 1913 015d 1C       		.uleb128 0x1c
 1914 015e 0A       		.uleb128 0xa
 1915 015f 00       		.byte	0
 1916 0160 00       		.byte	0
 1917 0161 18       		.uleb128 0x18
 1918 0162 34       		.uleb128 0x34
 1919 0163 00       		.byte	0
 1920 0164 03       		.uleb128 0x3
 1921 0165 0E       		.uleb128 0xe
 1922 0166 3A       		.uleb128 0x3a
 1923 0167 0B       		.uleb128 0xb
 1924 0168 3B       		.uleb128 0x3b
 1925 0169 0B       		.uleb128 0xb
 1926 016a 49       		.uleb128 0x49
 1927 016b 13       		.uleb128 0x13
 1928 016c 3F       		.uleb128 0x3f
 1929 016d 19       		.uleb128 0x19
 1930 016e 02       		.uleb128 0x2
 1931 016f 18       		.uleb128 0x18
 1932 0170 00       		.byte	0
 1933 0171 00       		.byte	0
 1934 0172 19       		.uleb128 0x19
 1935 0173 2E       		.uleb128 0x2e
 1936 0174 00       		.byte	0
 1937 0175 3F       		.uleb128 0x3f
 1938 0176 19       		.uleb128 0x19
 1939 0177 3C       		.uleb128 0x3c
 1940 0178 19       		.uleb128 0x19
 1941 0179 6E       		.uleb128 0x6e
 1942 017a 0E       		.uleb128 0xe
 1943 017b 03       		.uleb128 0x3
 1944 017c 0E       		.uleb128 0xe
 1945 017d 3A       		.uleb128 0x3a
 1946 017e 0B       		.uleb128 0xb
 1947 017f 3B       		.uleb128 0x3b
 1948 0180 0B       		.uleb128 0xb
 1949 0181 00       		.byte	0
 1950 0182 00       		.byte	0
 1951 0183 00       		.byte	0
 1952              		.section	.debug_loc,"",%progbits
 1953              	.Ldebug_loc0:
 1954              	.LLST0:
 1955 0000 76000000 		.4byte	.LVL5
 1956 0004 7A000000 		.4byte	.LVL7
 1957 0008 0200     		.2byte	0x2
 1958 000a 30       		.byte	0x30
 1959 000b 9F       		.byte	0x9f
 1960 000c 7A000000 		.4byte	.LVL7
 1961 0010 FC000000 		.4byte	.LFE1
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 51


 1962 0014 0100     		.2byte	0x1
 1963 0016 53       		.byte	0x53
 1964 0017 00000000 		.4byte	0
 1965 001b 00000000 		.4byte	0
 1966              	.LLST1:
 1967 001f 6E000000 		.4byte	.LVL2
 1968 0023 72000000 		.4byte	.LVL3
 1969 0027 0100     		.2byte	0x1
 1970 0029 50       		.byte	0x50
 1971 002a 72000000 		.4byte	.LVL3
 1972 002e 74000000 		.4byte	.LVL4
 1973 0032 0100     		.2byte	0x1
 1974 0034 52       		.byte	0x52
 1975 0035 74000000 		.4byte	.LVL4
 1976 0039 78000000 		.4byte	.LVL6
 1977 003d 0100     		.2byte	0x1
 1978 003f 53       		.byte	0x53
 1979 0040 78000000 		.4byte	.LVL6
 1980 0044 7A000000 		.4byte	.LVL7
 1981 0048 0200     		.2byte	0x2
 1982 004a 71       		.byte	0x71
 1983 004b 00       		.sleb128 0
 1984 004c 7A000000 		.4byte	.LVL7
 1985 0050 92000000 		.4byte	.LVL9
 1986 0054 0200     		.2byte	0x2
 1987 0056 30       		.byte	0x30
 1988 0057 9F       		.byte	0x9f
 1989 0058 00000000 		.4byte	0
 1990 005c 00000000 		.4byte	0
 1991              	.LLST2:
 1992 0060 84000000 		.4byte	.LVL8
 1993 0064 92000000 		.4byte	.LVL9
 1994 0068 0400     		.2byte	0x4
 1995 006a 0A       		.byte	0xa
 1996 006b 0010     		.2byte	0x1000
 1997 006d 9F       		.byte	0x9f
 1998 006e 00000000 		.4byte	0
 1999 0072 00000000 		.4byte	0
 2000              	.LLST3:
 2001 0076 00000000 		.4byte	.LVL13
 2002 007a 06000000 		.4byte	.LVL15
 2003 007e 0100     		.2byte	0x1
 2004 0080 50       		.byte	0x50
 2005 0081 06000000 		.4byte	.LVL15
 2006 0085 1A000000 		.4byte	.LVL17
 2007 0089 0100     		.2byte	0x1
 2008 008b 52       		.byte	0x52
 2009 008c 1A000000 		.4byte	.LVL17
 2010 0090 20000000 		.4byte	.LVL18
 2011 0094 0400     		.2byte	0x4
 2012 0096 F3       		.byte	0xf3
 2013 0097 01       		.uleb128 0x1
 2014 0098 50       		.byte	0x50
 2015 0099 9F       		.byte	0x9f
 2016 009a 20000000 		.4byte	.LVL18
 2017 009e 22000000 		.4byte	.LVL19
 2018 00a2 0100     		.2byte	0x1
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 52


 2019 00a4 50       		.byte	0x50
 2020 00a5 22000000 		.4byte	.LVL19
 2021 00a9 28000000 		.4byte	.LFE6
 2022 00ad 0400     		.2byte	0x4
 2023 00af F3       		.byte	0xf3
 2024 00b0 01       		.uleb128 0x1
 2025 00b1 50       		.byte	0x50
 2026 00b2 9F       		.byte	0x9f
 2027 00b3 00000000 		.4byte	0
 2028 00b7 00000000 		.4byte	0
 2029              	.LLST4:
 2030 00bb 02000000 		.4byte	.LVL14
 2031 00bf 06000000 		.4byte	.LVL15
 2032 00c3 0200     		.2byte	0x2
 2033 00c5 30       		.byte	0x30
 2034 00c6 9F       		.byte	0x9f
 2035 00c7 0E000000 		.4byte	.LVL16
 2036 00cb 20000000 		.4byte	.LVL18
 2037 00cf 0100     		.2byte	0x1
 2038 00d1 50       		.byte	0x50
 2039 00d2 20000000 		.4byte	.LVL18
 2040 00d6 22000000 		.4byte	.LVL19
 2041 00da 0200     		.2byte	0x2
 2042 00dc 30       		.byte	0x30
 2043 00dd 9F       		.byte	0x9f
 2044 00de 22000000 		.4byte	.LVL19
 2045 00e2 28000000 		.4byte	.LFE6
 2046 00e6 0100     		.2byte	0x1
 2047 00e8 50       		.byte	0x50
 2048 00e9 00000000 		.4byte	0
 2049 00ed 00000000 		.4byte	0
 2050              	.LLST5:
 2051 00f1 00000000 		.4byte	.LVL20
 2052 00f5 08000000 		.4byte	.LVL21
 2053 00f9 0100     		.2byte	0x1
 2054 00fb 50       		.byte	0x50
 2055 00fc 08000000 		.4byte	.LVL21
 2056 0100 12000000 		.4byte	.LVL23
 2057 0104 0100     		.2byte	0x1
 2058 0106 54       		.byte	0x54
 2059 0107 12000000 		.4byte	.LVL23
 2060 010b 20000000 		.4byte	.LVL25
 2061 010f 0400     		.2byte	0x4
 2062 0111 F3       		.byte	0xf3
 2063 0112 01       		.uleb128 0x1
 2064 0113 50       		.byte	0x50
 2065 0114 9F       		.byte	0x9f
 2066 0115 20000000 		.4byte	.LVL25
 2067 0119 22000000 		.4byte	.LVL26
 2068 011d 0100     		.2byte	0x1
 2069 011f 54       		.byte	0x54
 2070 0120 22000000 		.4byte	.LVL26
 2071 0124 2C000000 		.4byte	.LFE7
 2072 0128 0400     		.2byte	0x4
 2073 012a F3       		.byte	0xf3
 2074 012b 01       		.uleb128 0x1
 2075 012c 50       		.byte	0x50
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 53


 2076 012d 9F       		.byte	0x9f
 2077 012e 00000000 		.4byte	0
 2078 0132 00000000 		.4byte	0
 2079              	.LLST6:
 2080 0136 1E000000 		.4byte	.LVL24
 2081 013a 20000000 		.4byte	.LVL25
 2082 013e 0100     		.2byte	0x1
 2083 0140 50       		.byte	0x50
 2084 0141 22000000 		.4byte	.LVL26
 2085 0145 24000000 		.4byte	.LVL27
 2086 0149 0100     		.2byte	0x1
 2087 014b 50       		.byte	0x50
 2088 014c 00000000 		.4byte	0
 2089 0150 00000000 		.4byte	0
 2090              	.LLST7:
 2091 0154 00000000 		.4byte	.LVL28
 2092 0158 04000000 		.4byte	.LVL29
 2093 015c 0100     		.2byte	0x1
 2094 015e 50       		.byte	0x50
 2095 015f 04000000 		.4byte	.LVL29
 2096 0163 10000000 		.4byte	.LFE8
 2097 0167 0400     		.2byte	0x4
 2098 0169 F3       		.byte	0xf3
 2099 016a 01       		.uleb128 0x1
 2100 016b 50       		.byte	0x50
 2101 016c 9F       		.byte	0x9f
 2102 016d 00000000 		.4byte	0
 2103 0171 00000000 		.4byte	0
 2104              	.LLST8:
 2105 0175 00000000 		.4byte	.LVL30
 2106 0179 0E000000 		.4byte	.LVL31
 2107 017d 0100     		.2byte	0x1
 2108 017f 50       		.byte	0x50
 2109 0180 0E000000 		.4byte	.LVL31
 2110 0184 1C000000 		.4byte	.LFE9
 2111 0188 0400     		.2byte	0x4
 2112 018a F3       		.byte	0xf3
 2113 018b 01       		.uleb128 0x1
 2114 018c 50       		.byte	0x50
 2115 018d 9F       		.byte	0x9f
 2116 018e 00000000 		.4byte	0
 2117 0192 00000000 		.4byte	0
 2118              	.LLST9:
 2119 0196 00000000 		.4byte	.LVL32
 2120 019a 0E000000 		.4byte	.LVL33
 2121 019e 0100     		.2byte	0x1
 2122 01a0 50       		.byte	0x50
 2123 01a1 0E000000 		.4byte	.LVL33
 2124 01a5 18000000 		.4byte	.LFE10
 2125 01a9 0400     		.2byte	0x4
 2126 01ab F3       		.byte	0xf3
 2127 01ac 01       		.uleb128 0x1
 2128 01ad 50       		.byte	0x50
 2129 01ae 9F       		.byte	0x9f
 2130 01af 00000000 		.4byte	0
 2131 01b3 00000000 		.4byte	0
 2132              	.LLST10:
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 54


 2133 01b7 00000000 		.4byte	.LVL34
 2134 01bb 04000000 		.4byte	.LVL35
 2135 01bf 0100     		.2byte	0x1
 2136 01c1 50       		.byte	0x50
 2137 01c2 04000000 		.4byte	.LVL35
 2138 01c6 10000000 		.4byte	.LFE11
 2139 01ca 0400     		.2byte	0x4
 2140 01cc F3       		.byte	0xf3
 2141 01cd 01       		.uleb128 0x1
 2142 01ce 50       		.byte	0x50
 2143 01cf 9F       		.byte	0x9f
 2144 01d0 00000000 		.4byte	0
 2145 01d4 00000000 		.4byte	0
 2146              	.LLST11:
 2147 01d8 00000000 		.4byte	.LVL36
 2148 01dc 04000000 		.4byte	.LVL37
 2149 01e0 0100     		.2byte	0x1
 2150 01e2 50       		.byte	0x50
 2151 01e3 04000000 		.4byte	.LVL37
 2152 01e7 10000000 		.4byte	.LFE12
 2153 01eb 0400     		.2byte	0x4
 2154 01ed F3       		.byte	0xf3
 2155 01ee 01       		.uleb128 0x1
 2156 01ef 50       		.byte	0x50
 2157 01f0 9F       		.byte	0x9f
 2158 01f1 00000000 		.4byte	0
 2159 01f5 00000000 		.4byte	0
 2160              	.LLST12:
 2161 01f9 00000000 		.4byte	.LVL38
 2162 01fd 0C000000 		.4byte	.LVL39
 2163 0201 0100     		.2byte	0x1
 2164 0203 50       		.byte	0x50
 2165 0204 0C000000 		.4byte	.LVL39
 2166 0208 12000000 		.4byte	.LVL41
 2167 020c 0100     		.2byte	0x1
 2168 020e 54       		.byte	0x54
 2169 020f 12000000 		.4byte	.LVL41
 2170 0213 1C000000 		.4byte	.LFE13
 2171 0217 0400     		.2byte	0x4
 2172 0219 F3       		.byte	0xf3
 2173 021a 01       		.uleb128 0x1
 2174 021b 50       		.byte	0x50
 2175 021c 9F       		.byte	0x9f
 2176 021d 00000000 		.4byte	0
 2177 0221 00000000 		.4byte	0
 2178              	.LLST13:
 2179 0225 00000000 		.4byte	.LVL38
 2180 0229 0F000000 		.4byte	.LVL40-1
 2181 022d 0100     		.2byte	0x1
 2182 022f 51       		.byte	0x51
 2183 0230 0F000000 		.4byte	.LVL40-1
 2184 0234 1C000000 		.4byte	.LFE13
 2185 0238 0400     		.2byte	0x4
 2186 023a F3       		.byte	0xf3
 2187 023b 01       		.uleb128 0x1
 2188 023c 51       		.byte	0x51
 2189 023d 9F       		.byte	0x9f
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 55


 2190 023e 00000000 		.4byte	0
 2191 0242 00000000 		.4byte	0
 2192              	.LLST14:
 2193 0246 00000000 		.4byte	.LVL42
 2194 024a 0C000000 		.4byte	.LVL43
 2195 024e 0100     		.2byte	0x1
 2196 0250 50       		.byte	0x50
 2197 0251 0C000000 		.4byte	.LVL43
 2198 0255 12000000 		.4byte	.LVL45
 2199 0259 0100     		.2byte	0x1
 2200 025b 54       		.byte	0x54
 2201 025c 12000000 		.4byte	.LVL45
 2202 0260 1C000000 		.4byte	.LFE14
 2203 0264 0400     		.2byte	0x4
 2204 0266 F3       		.byte	0xf3
 2205 0267 01       		.uleb128 0x1
 2206 0268 50       		.byte	0x50
 2207 0269 9F       		.byte	0x9f
 2208 026a 00000000 		.4byte	0
 2209 026e 00000000 		.4byte	0
 2210              	.LLST15:
 2211 0272 00000000 		.4byte	.LVL42
 2212 0276 0F000000 		.4byte	.LVL44-1
 2213 027a 0100     		.2byte	0x1
 2214 027c 51       		.byte	0x51
 2215 027d 0F000000 		.4byte	.LVL44-1
 2216 0281 16000000 		.4byte	.LVL46
 2217 0285 0100     		.2byte	0x1
 2218 0287 55       		.byte	0x55
 2219 0288 16000000 		.4byte	.LVL46
 2220 028c 1C000000 		.4byte	.LFE14
 2221 0290 0800     		.2byte	0x8
 2222 0292 F3       		.byte	0xf3
 2223 0293 01       		.uleb128 0x1
 2224 0294 50       		.byte	0x50
 2225 0295 32       		.byte	0x32
 2226 0296 24       		.byte	0x24
 2227 0297 73       		.byte	0x73
 2228 0298 00       		.sleb128 0
 2229 0299 22       		.byte	0x22
 2230 029a 00000000 		.4byte	0
 2231 029e 00000000 		.4byte	0
 2232              	.LLST16:
 2233 02a2 00000000 		.4byte	.LVL47
 2234 02a6 0C000000 		.4byte	.LVL48
 2235 02aa 0100     		.2byte	0x1
 2236 02ac 50       		.byte	0x50
 2237 02ad 0C000000 		.4byte	.LVL48
 2238 02b1 44000000 		.4byte	.LVL51
 2239 02b5 0100     		.2byte	0x1
 2240 02b7 54       		.byte	0x54
 2241 02b8 44000000 		.4byte	.LVL51
 2242 02bc 5C000000 		.4byte	.LFE15
 2243 02c0 0400     		.2byte	0x4
 2244 02c2 F3       		.byte	0xf3
 2245 02c3 01       		.uleb128 0x1
 2246 02c4 50       		.byte	0x50
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 56


 2247 02c5 9F       		.byte	0x9f
 2248 02c6 00000000 		.4byte	0
 2249 02ca 00000000 		.4byte	0
 2250              	.LLST17:
 2251 02ce 00000000 		.4byte	.LVL47
 2252 02d2 0F000000 		.4byte	.LVL49-1
 2253 02d6 0100     		.2byte	0x1
 2254 02d8 51       		.byte	0x51
 2255 02d9 0F000000 		.4byte	.LVL49-1
 2256 02dd 1C000000 		.4byte	.LVL50
 2257 02e1 0400     		.2byte	0x4
 2258 02e3 F3       		.byte	0xf3
 2259 02e4 01       		.uleb128 0x1
 2260 02e5 51       		.byte	0x51
 2261 02e6 9F       		.byte	0x9f
 2262 02e7 1C000000 		.4byte	.LVL50
 2263 02eb 48000000 		.4byte	.LVL52
 2264 02ef 0100     		.2byte	0x1
 2265 02f1 51       		.byte	0x51
 2266 02f2 00000000 		.4byte	0
 2267 02f6 00000000 		.4byte	0
 2268              	.LLST18:
 2269 02fa 00000000 		.4byte	.LVL55
 2270 02fe 0C000000 		.4byte	.LVL56
 2271 0302 0100     		.2byte	0x1
 2272 0304 50       		.byte	0x50
 2273 0305 0C000000 		.4byte	.LVL56
 2274 0309 28000000 		.4byte	.LVL60
 2275 030d 0100     		.2byte	0x1
 2276 030f 55       		.byte	0x55
 2277 0310 28000000 		.4byte	.LVL60
 2278 0314 40000000 		.4byte	.LFE16
 2279 0318 0400     		.2byte	0x4
 2280 031a F3       		.byte	0xf3
 2281 031b 01       		.uleb128 0x1
 2282 031c 50       		.byte	0x50
 2283 031d 9F       		.byte	0x9f
 2284 031e 00000000 		.4byte	0
 2285 0322 00000000 		.4byte	0
 2286              	.LLST19:
 2287 0326 00000000 		.4byte	.LVL55
 2288 032a 0F000000 		.4byte	.LVL57-1
 2289 032e 0100     		.2byte	0x1
 2290 0330 51       		.byte	0x51
 2291 0331 0F000000 		.4byte	.LVL57-1
 2292 0335 1C000000 		.4byte	.LVL58
 2293 0339 0400     		.2byte	0x4
 2294 033b F3       		.byte	0xf3
 2295 033c 01       		.uleb128 0x1
 2296 033d 51       		.byte	0x51
 2297 033e 9F       		.byte	0x9f
 2298 033f 1C000000 		.4byte	.LVL58
 2299 0343 25000000 		.4byte	.LVL59-1
 2300 0347 0100     		.2byte	0x1
 2301 0349 50       		.byte	0x50
 2302 034a 00000000 		.4byte	0
 2303 034e 00000000 		.4byte	0
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 57


 2304              	.LLST20:
 2305 0352 00000000 		.4byte	.LVL62
 2306 0356 0C000000 		.4byte	.LVL63
 2307 035a 0100     		.2byte	0x1
 2308 035c 50       		.byte	0x50
 2309 035d 0C000000 		.4byte	.LVL63
 2310 0361 2A000000 		.4byte	.LVL68
 2311 0365 0100     		.2byte	0x1
 2312 0367 54       		.byte	0x54
 2313 0368 2A000000 		.4byte	.LVL68
 2314 036c 48000000 		.4byte	.LFE17
 2315 0370 0400     		.2byte	0x4
 2316 0372 F3       		.byte	0xf3
 2317 0373 01       		.uleb128 0x1
 2318 0374 50       		.byte	0x50
 2319 0375 9F       		.byte	0x9f
 2320 0376 00000000 		.4byte	0
 2321 037a 00000000 		.4byte	0
 2322              	.LLST21:
 2323 037e 00000000 		.4byte	.LVL62
 2324 0382 0F000000 		.4byte	.LVL64-1
 2325 0386 0100     		.2byte	0x1
 2326 0388 51       		.byte	0x51
 2327 0389 0F000000 		.4byte	.LVL64-1
 2328 038d 1C000000 		.4byte	.LVL65
 2329 0391 0400     		.2byte	0x4
 2330 0393 F3       		.byte	0xf3
 2331 0394 01       		.uleb128 0x1
 2332 0395 51       		.byte	0x51
 2333 0396 9F       		.byte	0x9f
 2334 0397 1C000000 		.4byte	.LVL65
 2335 039b 1F000000 		.4byte	.LVL66-1
 2336 039f 0100     		.2byte	0x1
 2337 03a1 50       		.byte	0x50
 2338 03a2 00000000 		.4byte	0
 2339 03a6 00000000 		.4byte	0
 2340              		.section	.debug_aranges,"",%progbits
 2341 0000 A4000000 		.4byte	0xa4
 2342 0004 0200     		.2byte	0x2
 2343 0006 00000000 		.4byte	.Ldebug_info0
 2344 000a 04       		.byte	0x4
 2345 000b 00       		.byte	0
 2346 000c 0000     		.2byte	0
 2347 000e 0000     		.2byte	0
 2348 0010 00000000 		.4byte	.LFB1
 2349 0014 FC000000 		.4byte	.LFE1-.LFB1
 2350 0018 00000000 		.4byte	.LFB2
 2351 001c 24000000 		.4byte	.LFE2-.LFB2
 2352 0020 00000000 		.4byte	.LFB0
 2353 0024 20000000 		.4byte	.LFE0-.LFB0
 2354 0028 00000000 		.4byte	.LFB3
 2355 002c 10000000 		.4byte	.LFE3-.LFB3
 2356 0030 00000000 		.4byte	.LFB4
 2357 0034 0C000000 		.4byte	.LFE4-.LFB4
 2358 0038 00000000 		.4byte	.LFB5
 2359 003c 02000000 		.4byte	.LFE5-.LFB5
 2360 0040 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 58


 2361 0044 28000000 		.4byte	.LFE6-.LFB6
 2362 0048 00000000 		.4byte	.LFB7
 2363 004c 2C000000 		.4byte	.LFE7-.LFB7
 2364 0050 00000000 		.4byte	.LFB8
 2365 0054 10000000 		.4byte	.LFE8-.LFB8
 2366 0058 00000000 		.4byte	.LFB9
 2367 005c 1C000000 		.4byte	.LFE9-.LFB9
 2368 0060 00000000 		.4byte	.LFB10
 2369 0064 18000000 		.4byte	.LFE10-.LFB10
 2370 0068 00000000 		.4byte	.LFB11
 2371 006c 10000000 		.4byte	.LFE11-.LFB11
 2372 0070 00000000 		.4byte	.LFB12
 2373 0074 10000000 		.4byte	.LFE12-.LFB12
 2374 0078 00000000 		.4byte	.LFB13
 2375 007c 1C000000 		.4byte	.LFE13-.LFB13
 2376 0080 00000000 		.4byte	.LFB14
 2377 0084 1C000000 		.4byte	.LFE14-.LFB14
 2378 0088 00000000 		.4byte	.LFB15
 2379 008c 5C000000 		.4byte	.LFE15-.LFB15
 2380 0090 00000000 		.4byte	.LFB16
 2381 0094 40000000 		.4byte	.LFE16-.LFB16
 2382 0098 00000000 		.4byte	.LFB17
 2383 009c 48000000 		.4byte	.LFE17-.LFB17
 2384 00a0 00000000 		.4byte	0
 2385 00a4 00000000 		.4byte	0
 2386              		.section	.debug_ranges,"",%progbits
 2387              	.Ldebug_ranges0:
 2388 0000 00000000 		.4byte	.LFB1
 2389 0004 FC000000 		.4byte	.LFE1
 2390 0008 00000000 		.4byte	.LFB2
 2391 000c 24000000 		.4byte	.LFE2
 2392 0010 00000000 		.4byte	.LFB0
 2393 0014 20000000 		.4byte	.LFE0
 2394 0018 00000000 		.4byte	.LFB3
 2395 001c 10000000 		.4byte	.LFE3
 2396 0020 00000000 		.4byte	.LFB4
 2397 0024 0C000000 		.4byte	.LFE4
 2398 0028 00000000 		.4byte	.LFB5
 2399 002c 02000000 		.4byte	.LFE5
 2400 0030 00000000 		.4byte	.LFB6
 2401 0034 28000000 		.4byte	.LFE6
 2402 0038 00000000 		.4byte	.LFB7
 2403 003c 2C000000 		.4byte	.LFE7
 2404 0040 00000000 		.4byte	.LFB8
 2405 0044 10000000 		.4byte	.LFE8
 2406 0048 00000000 		.4byte	.LFB9
 2407 004c 1C000000 		.4byte	.LFE9
 2408 0050 00000000 		.4byte	.LFB10
 2409 0054 18000000 		.4byte	.LFE10
 2410 0058 00000000 		.4byte	.LFB11
 2411 005c 10000000 		.4byte	.LFE11
 2412 0060 00000000 		.4byte	.LFB12
 2413 0064 10000000 		.4byte	.LFE12
 2414 0068 00000000 		.4byte	.LFB13
 2415 006c 1C000000 		.4byte	.LFE13
 2416 0070 00000000 		.4byte	.LFB14
 2417 0074 1C000000 		.4byte	.LFE14
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 59


 2418 0078 00000000 		.4byte	.LFB15
 2419 007c 5C000000 		.4byte	.LFE15
 2420 0080 00000000 		.4byte	.LFB16
 2421 0084 40000000 		.4byte	.LFE16
 2422 0088 00000000 		.4byte	.LFB17
 2423 008c 48000000 		.4byte	.LFE17
 2424 0090 00000000 		.4byte	0
 2425 0094 00000000 		.4byte	0
 2426              		.section	.debug_line,"",%progbits
 2427              	.Ldebug_line0:
 2428 0000 72020000 		.section	.debug_str,"MS",%progbits,1
 2428      02004B00 
 2428      00000201 
 2428      FB0E0D00 
 2428      01010101 
 2429              	.LASF10:
 2430 0000 75696E74 		.ascii	"uint16\000"
 2430      313600
 2431              	.LASF48:
 2432 0007 61646347 		.ascii	"adcGain\000"
 2432      61696E00 
 2433              	.LASF24:
 2434 000f 636F756E 		.ascii	"counts\000"
 2434      747300
 2435              	.LASF53:
 2436 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2436      436F756E 
 2436      7473546F 
 2436      5F566F6C 
 2436      747300
 2437              	.LASF25:
 2438 0029 4144435F 		.ascii	"ADC_Init\000"
 2438      496E6974 
 2438      00
 2439              	.LASF63:
 2440 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2440      43313120 
 2440      352E342E 
 2440      31203230 
 2440      31363036 
 2441 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2441      20726576 
 2441      6973696F 
 2441      6E203233 
 2441      37373135 
 2442 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2442      66756E63 
 2442      74696F6E 
 2442      2D736563 
 2442      74696F6E 
 2443              	.LASF65:
 2444 00c0 433A5C55 		.ascii	"C:\\Users\\okuntso\\Documents\\PSoC Creator\\Diplom"
 2444      73657273 
 2444      5C6F6B75 
 2444      6E74736F 
 2444      5C446F63 
 2445 00ee 615C4465 		.ascii	"a\\Design01.cydsn\000"
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 60


 2445      7369676E 
 2445      30312E63 
 2445      7964736E 
 2445      00
 2446              	.LASF29:
 2447 00ff 4144435F 		.ascii	"ADC_StartConvert\000"
 2447      53746172 
 2447      74436F6E 
 2447      76657274 
 2447      00
 2448              	.LASF6:
 2449 0110 6C6F6E67 		.ascii	"long long int\000"
 2449      206C6F6E 
 2449      6720696E 
 2449      7400
 2450              	.LASF0:
 2451 011e 7369676E 		.ascii	"signed char\000"
 2451      65642063 
 2451      68617200 
 2452              	.LASF31:
 2453 012a 73746174 		.ascii	"status\000"
 2453      757300
 2454              	.LASF7:
 2455 0131 6C6F6E67 		.ascii	"long long unsigned int\000"
 2455      206C6F6E 
 2455      6720756E 
 2455      7369676E 
 2455      65642069 
 2456              	.LASF13:
 2457 0148 696E7433 		.ascii	"int32\000"
 2457      3200
 2458              	.LASF27:
 2459 014e 4144435F 		.ascii	"ADC_Start\000"
 2459      53746172 
 2459      7400
 2460              	.LASF4:
 2461 0158 6C6F6E67 		.ascii	"long int\000"
 2461      20696E74 
 2461      00
 2462              	.LASF52:
 2463 0161 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2463      436F756E 
 2463      7473546F 
 2463      5F75566F 
 2463      6C747300 
 2464              	.LASF58:
 2465 0175 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2465      636F756E 
 2465      74735065 
 2465      72313056 
 2465      6F6C7400 
 2466              	.LASF9:
 2467 0189 75696E74 		.ascii	"uint8\000"
 2467      3800
 2468              	.LASF61:
 2469 018f 43794465 		.ascii	"CyDelayUs\000"
 2469      6C617955 
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 61


 2469      7300
 2470              	.LASF16:
 2471 0199 646F7562 		.ascii	"double\000"
 2471      6C6500
 2472              	.LASF11:
 2473 01a0 75696E74 		.ascii	"uint32\000"
 2473      333200
 2474              	.LASF38:
 2475 01a7 6D61736B 		.ascii	"mask\000"
 2475      00
 2476              	.LASF56:
 2477 01ac 4144435F 		.ascii	"ADC_initVar\000"
 2477      696E6974 
 2477      56617200 
 2478              	.LASF34:
 2479 01b8 7265744D 		.ascii	"retMode\000"
 2479      6F646500 
 2480              	.LASF43:
 2481 01c0 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2481      5365744C 
 2481      696D6974 
 2481      4D61736B 
 2481      00
 2482              	.LASF8:
 2483 01d1 756E7369 		.ascii	"unsigned int\000"
 2483      676E6564 
 2483      20696E74 
 2483      00
 2484              	.LASF66:
 2485 01de 75566F6C 		.ascii	"uVolts\000"
 2485      747300
 2486              	.LASF5:
 2487 01e5 6C6F6E67 		.ascii	"long unsigned int\000"
 2487      20756E73 
 2487      69676E65 
 2487      6420696E 
 2487      7400
 2488              	.LASF44:
 2489 01f7 4144435F 		.ascii	"ADC_SetSatMask\000"
 2489      53657453 
 2489      61744D61 
 2489      736B00
 2490              	.LASF54:
 2491 0206 766F6C74 		.ascii	"volts\000"
 2491      7300
 2492              	.LASF23:
 2493 020c 746D7052 		.ascii	"tmpRegVal\000"
 2493      65675661 
 2493      6C00
 2494              	.LASF3:
 2495 0216 73686F72 		.ascii	"short unsigned int\000"
 2495      7420756E 
 2495      7369676E 
 2495      65642069 
 2495      6E7400
 2496              	.LASF60:
 2497 0229 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 62


 2497      74536574 
 2497      56656374 
 2497      6F7200
 2498              	.LASF30:
 2499 0238 4144435F 		.ascii	"ADC_StopConvert\000"
 2499      53746F70 
 2499      436F6E76 
 2499      65727400 
 2500              	.LASF51:
 2501 0248 6D566F6C 		.ascii	"mVolts\000"
 2501      747300
 2502              	.LASF19:
 2503 024f 72656733 		.ascii	"reg32\000"
 2503      3200
 2504              	.LASF14:
 2505 0255 666C6F61 		.ascii	"float32\000"
 2505      74333200 
 2506              	.LASF21:
 2507 025d 73697A65 		.ascii	"sizetype\000"
 2507      74797065 
 2507      00
 2508              	.LASF40:
 2509 0266 6C6F774C 		.ascii	"lowLimit\000"
 2509      696D6974 
 2509      00
 2510              	.LASF20:
 2511 026f 6C6F6E67 		.ascii	"long double\000"
 2511      20646F75 
 2511      626C6500 
 2512              	.LASF41:
 2513 027b 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2513      53657448 
 2513      6967684C 
 2513      696D6974 
 2513      00
 2514              	.LASF32:
 2515 028c 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2515      4973456E 
 2515      64436F6E 
 2515      76657273 
 2515      696F6E00 
 2516              	.LASF17:
 2517 02a0 696E7436 		.ascii	"int64\000"
 2517      3400
 2518              	.LASF59:
 2519 02a6 4379496E 		.ascii	"CyIntSetPriority\000"
 2519      74536574 
 2519      5072696F 
 2519      72697479 
 2519      00
 2520              	.LASF37:
 2521 02b7 4144435F 		.ascii	"ADC_SetChanMask\000"
 2521      53657443 
 2521      68616E4D 
 2521      61736B00 
 2522              	.LASF64:
 2523 02c7 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 63


 2523      72617465 
 2523      645F536F 
 2523      75726365 
 2523      5C50536F 
 2524              	.LASF47:
 2525 02e4 4144435F 		.ascii	"ADC_SetGain\000"
 2525      53657447 
 2525      61696E00 
 2526              	.LASF15:
 2527 02f0 666C6F61 		.ascii	"float\000"
 2527      7400
 2528              	.LASF42:
 2529 02f6 68696768 		.ascii	"highLimit\000"
 2529      4C696D69 
 2529      7400
 2530              	.LASF49:
 2531 0300 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2531      436F756E 
 2531      7473546F 
 2531      5F6D566F 
 2531      6C747300 
 2532              	.LASF39:
 2533 0314 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2533      5365744C 
 2533      6F774C69 
 2533      6D697400 
 2534              	.LASF62:
 2535 0324 43794861 		.ascii	"CyHalt\000"
 2535      6C7400
 2536              	.LASF1:
 2537 032b 756E7369 		.ascii	"unsigned char\000"
 2537      676E6564 
 2537      20636861 
 2537      7200
 2538              	.LASF57:
 2539 0339 4144435F 		.ascii	"ADC_offset\000"
 2539      6F666673 
 2539      657400
 2540              	.LASF2:
 2541 0344 73686F72 		.ascii	"short int\000"
 2541      7420696E 
 2541      7400
 2542              	.LASF28:
 2543 034e 4144435F 		.ascii	"ADC_Stop\000"
 2543      53746F70 
 2543      00
 2544              	.LASF22:
 2545 0357 63684E75 		.ascii	"chNum\000"
 2545      6D00
 2546              	.LASF35:
 2547 035d 6368616E 		.ascii	"chan\000"
 2547      00
 2548              	.LASF18:
 2549 0362 63686172 		.ascii	"char\000"
 2549      00
 2550              	.LASF55:
 2551 0367 4144435F 		.ascii	"ADC_channelsConfig\000"
ARM GAS  C:\Users\okuntso\AppData\Local\Temp\ccnbcPNN.s 			page 64


 2551      6368616E 
 2551      6E656C73 
 2551      436F6E66 
 2551      696700
 2552              	.LASF46:
 2553 037a 6F666673 		.ascii	"offset\000"
 2553      657400
 2554              	.LASF50:
 2555 0381 61646343 		.ascii	"adcCounts\000"
 2555      6F756E74 
 2555      7300
 2556              	.LASF26:
 2557 038b 4144435F 		.ascii	"ADC_Enable\000"
 2557      456E6162 
 2557      6C6500
 2558              	.LASF12:
 2559 0396 696E7431 		.ascii	"int16\000"
 2559      3600
 2560              	.LASF45:
 2561 039c 4144435F 		.ascii	"ADC_SetOffset\000"
 2561      5365744F 
 2561      66667365 
 2561      7400
 2562              	.LASF36:
 2563 03aa 72657375 		.ascii	"result\000"
 2563      6C7400
 2564              	.LASF33:
 2565 03b1 4144435F 		.ascii	"ADC_GetResult16\000"
 2565      47657452 
 2565      6573756C 
 2565      74313600 
 2566              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
